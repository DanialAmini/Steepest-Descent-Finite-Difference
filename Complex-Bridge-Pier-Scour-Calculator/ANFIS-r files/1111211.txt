> 
> setwd("C:/Users/Computer Emergency/Desktop/scourpaper/Complex-Bridge-Pier-Scour-Calculator-1.0/ANFIS-r files")  #set working folder
> 
> rmse <- function(error)
+ {
+   sqrt(mean(error^2))
+ }
> #x1 log(bpg/bpc+.05)x2 log(bcol/bpc+.05)x3 log(h0/y+2.1)x4 log(h1/y+1.55)
> #x5 log(T/y+.05)x6 log(bpc/y)x7 log(f1/bcol+.05)z log(be/b*+.05)
> 
> MyData = read.csv("anfis-log_x_b3.txt",header=TRUE)
> MyData2 = read.csv("test_data.txt",header=TRUE)
> 
> 
> library("anfis")
> require("parallel")
> if(.Platform$OS.type == "windows"){
+ options(mc.cores=5)
+ }else{
+ options(mc.cores=5) 
+ }
> 
> membershipFunction<-list(
+ x1m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.91,sigma=.2))),
+ 
+ x2m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-1.3,sigma=0.4))),
+ 
+ x3m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.5,sigma=0.40))),
+ 
+ x4m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.00,sigma=0.1))),
+ 
+ x5m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-1.2,sigma=0.40)),
+       new(Class="NormalizedGaussianMF",parameters=c(mu=0.2,sigma=0.40))),
+ 
+ x6m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.13,sigma=0.78))),
+ 
+ x7m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.27,sigma=0.5))))
> 
> X=MyData[,1:7]
> Y=MyData[,8,drop=FALSE]
> 
> X2=MyData2[,1:7]
> Y2=MyData2[,8,drop=FALSE]
> 
> X= as.matrix(as.data.frame(lapply(X, as.numeric)))
> typeof(X)
[1] "double"
> typeof(Y)
[1] "list"
> Y= as.matrix(as.data.frame(lapply(Y, as.numeric)))
> 
> X2= as.matrix(as.data.frame(lapply(X2, as.numeric)))
> Y2= as.matrix(as.data.frame(lapply(Y2, as.numeric)))
> 
> anfis3 <- new(Class="ANFIS",X,Y,membershipFunction)
> 
> trainOutput <- trainHybridJangOffLine(anfis3, epochs=10)
[1] "epoch:  1"
[1] "epoch:  2"
[1] "epoch:  3"
[1] "epoch:  4"
[1] "epoch:  5"
[1] "epoch:  6"
[1] "epoch:  7"
[1] "epoch:  8"
[1] "epoch:  9"
> 
> 
> summary(anfis3)
ANFIS network 
Trainning Set: 
         dim(x)= 279x7 
         dim(y)= 279x1 
Arquitecture:  7 ( 1x1x1x1x2x1x1 ) - 2 - 16 ( 16x1 ) - 1 
Last training error:  7.059107 

Call: trainHybridJangOffLine(object = anfis3, epochs = 10)

Statistics for Off-line training
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  7.059   7.064   7.069   7.070   7.076   7.083 
> coef(anfis3)
$`premises`
$`premises`$`x1m`
$`premises`$`x1m`[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.9280687  0.1355122 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x2m
$`premises`$x2m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
       mu     sigma 
-1.297379  0.408144 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x3m
$`premises`$x3m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
  0.5   0.4 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x4m
$`premises`$x4m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
          mu        sigma 
2.680559e-19 1.000000e-01 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x5m
$`premises`$x5m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-1.2123080  0.3688935 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))

$`premises`$x5m[[2]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
       mu     sigma 
0.1950275 0.4052773 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x6m
$`premises`$x6m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.1299744  0.7800043 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x7m
$`premises`$x7m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
 0.27  0.50 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))



$consequents
                z
 [1,] -0.22245536
 [2,]  0.27513955
 [3,]  3.08355001
 [4,] -2.33199992
 [5,] -0.07395241
 [6,] -0.10103672
 [7,] -0.15510669
 [8,] -0.68839337
 [9,]  0.36374516
[10,]  0.10318519
[11,] -0.30612078
[12,]  0.45292625
[13,] -0.41760219
[14,]  0.06376451
[15,] -0.04840421
[16,] -0.11029707

> 
> predictedY <- predict(anfis3,X)
> err=rmse(MyData$z-predictedY)
> err
[1] 0.1590527
> 
> 
> predictedY2 <- predict(anfis3,X2)
> err2=rmse(MyData2$z-predictedY2)
> err2
[1] 0.66396
> 
> graphics.off()
> dev.new()
> 
> axislimit_u= max( max(MyData$z),max(predictedY))
> axislimit_l= min( min(MyData$z),min(predictedY),0)
> xlim_=c(axislimit_l,axislimit_u)
> plot(MyData$z,predictedY,xlim=xlim_,ylim=xlim_)
> lines(c(0,axislimit_u),c(0,axislimit_u),col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*1.2),lty=2,col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*.8),lty=2,col="red")
> title(paste("train-rmse",round(err,2)))
> 
> dev.new(xpos=100)
> 
> axislimit_u= max( max(MyData2$z),max(predictedY2))
> axislimit_l= min( min(MyData2$z),min(predictedY2),0)
> xlim_=c(axislimit_l,axislimit_u)
> plot(MyData2$z,predictedY2,xlim=xlim_,ylim=xlim_)
> lines(c(0,axislimit_u),c(0,axislimit_u),col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*1.2),lty=2,col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*.8),lty=2,col="red")
> title(paste("test-rmse=",round(err2,2)))
> 
> 
> 
> 
> 
> vars=7
> 
> 
> list_coef=coef(anfis3)$consequents
> 
> no_functions=length(list_coef)/(vars+1)
> 
> for (i in 1:no_functions)
+ {
+ if(i==1){cat("\n")}
+ str=i
+ str=paste('z',i,'=',list_coef[(i-1)*(vars+1)+vars+1], sep = '')
+ for (j in 1:vars)
+ {
+ str=paste(str,'+',list_coef[(i-1)*(vars+1)+j],'*x',j, sep = '')
+ }
+ str=paste(str,"\n")
+ cat(str)
+ if(i==no_functions){cat("\n")}
+ }

z1=-0.688393372728742+-0.222455360095907*x1+0.275139549209395*x2+3.08355000674554*x3+-2.33199991788138*x4+-0.0739524090603637*x5+-0.101036715590921*x6+-0.155106687910613*x7 
z2=-0.110297071404523+0.363745156706801*x1+0.103185194317585*x2+-0.306120779277607*x3+0.452926251843305*x4+-0.417602186347403*x5+0.0637645142762229*x6+-0.0484042095688904*x7 

> 
> 
> list_coef
                z
 [1,] -0.22245536
 [2,]  0.27513955
 [3,]  3.08355001
 [4,] -2.33199992
 [5,] -0.07395241
 [6,] -0.10103672
 [7,] -0.15510669
 [8,] -0.68839337
 [9,]  0.36374516
[10,]  0.10318519
[11,] -0.30612078
[12,]  0.45292625
[13,] -0.41760219
[14,]  0.06376451
[15,] -0.04840421
[16,] -0.11029707
> 
> 
> for (i in 1:vars){
+ if(i==1){cat("\n")}
+ #if(length(membershipFunction[[i]])>1){
+ for (j in 1:length(membershipFunction[[i]])){
+ str=""
+ mu__=getPremises(anfis3)[[i]][[j]][1][[1]]
+ stdev__=getPremises(anfis3)[[i]][[j]][2][[1]]
+ str=paste(str,"w",i,'_',j,"=exp(-0.5*(x",i,"-",mu__,") ^ 2/",stdev__," ^ 2)",sep="")
+ cat(str,"\n")
+ }
+ cat("\n")
+ #}
+ }

w1_1=exp(-0.5*(x1--0.92806870028075) ^ 2/0.13551219877978 ^ 2) 

w2_1=exp(-0.5*(x2--1.29737933475521) ^ 2/0.408144031363606 ^ 2) 

w3_1=exp(-0.5*(x3-0.5) ^ 2/0.4 ^ 2) 

w4_1=exp(-0.5*(x4-2.68055939399453e-19) ^ 2/0.1 ^ 2) 

w5_1=exp(-0.5*(x5--1.21230801241928) ^ 2/0.368893481096488 ^ 2) 
w5_2=exp(-0.5*(x5-0.195027505937235) ^ 2/0.405277272001322 ^ 2) 

w6_1=exp(-0.5*(x6--0.129974415473553) ^ 2/0.7800042637504 ^ 2) 

w7_1=exp(-0.5*(x7-0.270000000000027) ^ 2/0.499999999999938 ^ 2) 

> 
> for (i in 1:no_functions){
+ str=paste('ww',i,'=',sep='')
+ for (j in 1:vars){
+ str=paste(str,'w',j,'_',getRules(anfis3)[i,j],sep='')
+ if(j<vars){str=paste(str,'*',sep='')}
+ }
+ cat(str,"\n")
+ }
ww1=w1_1*w2_1*w3_1*w4_1*w5_1*w6_1*w7_1 
ww2=w1_1*w2_1*w3_1*w4_1*w5_2*w6_1*w7_1 
> 
> str='\nwwN='
> str2='\nz='
> for (i in 1:no_functions){
+ str=paste(str,'ww',i,sep='')
+ str2=paste(str2,'z',i,'*ww',i,sep='')
+ if(i<no_functions){str=paste(str,'+',sep='')}
+ if(i<no_functions){str2=paste(str2,'+',sep='')}
+ }
> str=paste(str,'\n\n')
> str2=paste(str2,'\n\n')
> 
> cat(str)

wwN=ww1+ww2 

> cat(str2)

z=z1*ww1+z2*ww2 

> 
> fitted.values(anfis3)
                  z
  [1,] -0.163037063
  [2,] -0.149686899
  [3,] -0.152503253
  [4,] -0.158884873
  [5,] -0.161652758
  [6,] -0.130453365
  [7,] -0.090602850
  [8,] -0.155363148
  [9,] -0.181509441
 [10,] -0.151069972
 [11,] -0.153059587
 [12,] -0.165939440
 [13,] -0.181836389
 [14,] -0.169808820
 [15,] -0.165418794
 [16,] -0.137362952
 [17,] -0.136446887
 [18,] -0.159489244
 [19,] -0.124942097
 [20,] -0.129467122
 [21,] -0.162275075
 [22,] -0.176287502
 [23,] -0.177929337
 [24,] -0.119756503
 [25,] -0.128492538
 [26,] -0.140908772
 [27,] -0.153846968
 [28,] -0.166189576
 [29,] -0.177532271
 [30,] -0.187764116
 [31,] -0.192463314
 [32,] -0.178646109
 [33,] -0.156052485
 [34,] -0.102418213
 [35,] -0.180061225
 [36,] -0.180061225
 [37,] -0.176202078
 [38,] -0.164351178
 [39,] -0.147247137
 [40,] -0.149007998
 [41,] -0.149425827
 [42,] -0.130857176
 [43,] -0.127305796
 [44,] -0.101183533
 [45,] -0.106841416
 [46,] -0.104387161
 [47,] -0.099463305
 [48,] -0.196559403
 [49,] -0.192532030
 [50,] -0.178725706
 [51,] -0.159722580
 [52,] -0.167715335
 [53,] -0.183256327
 [54,] -0.206959746
 [55,] -0.222625255
 [56,] -0.222410434
 [57,] -0.170219857
 [58,] -0.179799603
 [59,] -0.179528555
 [60,] -0.191560879
 [61,] -0.207081329
 [62,] -0.216784019
 [63,] -0.196841226
 [64,] -0.227128583
 [65,] -0.237383153
 [66,] -0.154838279
 [67,] -0.166463817
 [68,] -0.098163744
 [69,] -0.109861369
 [70,] -0.121299369
 [71,] -0.125262024
 [72,] -0.118027133
 [73,]  0.006339226
 [74,] -0.007774403
 [75,]  0.006181947
 [76,] -0.187848930
 [77,] -0.183722217
 [78,] -0.086090432
 [79,] -0.073968147
 [80,] -0.061634559
 [81,] -0.130289740
 [82,] -0.124986147
 [83,] -0.112137751
 [84,] -0.050804002
 [85,] -0.101546801
 [86,] -0.076255148
 [87,] -0.063726931
 [88,] -0.082088765
 [89,] -0.012554162
 [90,] -0.030986083
 [91,] -0.104922962
 [92,] -0.141021240
 [93,] -0.159554042
 [94,] -0.174777595
 [95,] -0.132203364
 [96,] -0.127809012
 [97,] -0.101400143
 [98,] -0.100003211
 [99,] -0.108305877
[100,] -0.082448953
[101,] -0.095824334
[102,] -0.105388541
[103,]  0.068303753
[104,]  0.050873007
[105,] -0.187764200
[106,] -0.184799125
[107,] -0.167117104
[108,] -0.182249249
[109,] -0.040891703
[110,] -0.093764436
[111,] -0.103661351
[112,] -0.093764436
[113,] -0.103661351
[114,] -0.078652730
[115,] -0.079266192
[116,] -0.196831291
[117,] -0.188657446
[118,] -0.195478860
[119,] -0.193352939
[120,] -0.192892547
[121,] -0.192931144
[122,] -0.190560444
[123,] -0.190153986
[124,] -0.185503971
[125,] -0.183927498
[126,] -0.142225370
[127,] -0.142669253
[128,] -0.139215254
[129,] -0.136318280
[130,] -0.136235878
[131,] -0.209569399
[132,] -0.220097126
[133,] -0.213459525
[134,] -0.241212704
[135,] -0.241212704
[136,] -0.246750813
[137,] -0.247014289
[138,] -0.235312186
[139,] -0.247946979
[140,] -0.245863128
[141,] -0.180501740
[142,] -0.191275285
[143,] -0.011686434
[144,] -0.007694032
[145,] -0.211099734
[146,] -0.196579290
[147,] -0.095371103
[148,] -0.161908360
[149,] -0.158305590
[150,] -0.152668764
[151,] -0.144731072
[152,] -0.147751952
[153,] -0.066088062
[154,] -0.076760156
[155,] -0.078804729
[156,] -0.038837909
[157,] -0.052798199
[158,] -0.055494262
[159,] -0.064601496
[160,] -0.078561786
[161,] -0.081257849
[162,] -0.112217993
[163,] -0.117639748
[164,] -0.124934660
[165,] -0.097122490
[166,] -0.104012932
[167,] -0.106708995
[168,] -0.091242143
[169,] -0.099982056
[170,] -0.040570463
[171,] -0.050895805
[172,] -0.119140371
[173,] -0.125738434
[174,] -0.135570024
[175,] -0.176007109
[176,] -0.180529092
[177,] -0.196601866
[178,] -0.095037006
[179,] -0.109236886
[180,] -0.121482983
[181,] -0.041405094
[182,] -0.160016484
[183,] -0.143159302
[184,] -0.123217035
[185,] -0.194145997
[186,] -0.209806320
[187,] -0.205008945
[188,] -0.187173998
[189,] -0.177010728
[190,] -0.169089175
[191,] -0.180101053
[192,] -0.201965674
[193,] -0.202103114
[194,] -0.194213920
[195,] -0.205008945
[196,] -0.206947553
[197,] -0.167679921
[198,] -0.064113121
[199,] -0.067742360
[200,] -0.071516480
[201,] -0.075030682
[202,] -0.081322330
[203,] -0.084118178
[204,] -0.086691132
[205,] -0.089047763
[206,] -0.091193733
[207,] -0.093133855
[208,] -0.096411846
[209,] -0.099861084
[210,] -0.110142452
[211,] -0.118439359
[212,] -0.126274209
[213,] -0.184791289
[214,]  0.046150133
[215,]  0.045028554
[216,]  0.042144946
[217,] -0.219952701
[218,] -0.190169312
[219,] -0.198322460
[220,] -0.063943911
[221,] -0.105481664
[222,] -0.197813775
[223,] -0.132844948
[224,] -0.066685193
[225,] -0.156845053
[226,] -0.172497407
[227,] -0.164884903
[228,] -0.004130701
[229,] -0.233546318
[230,] -0.252969596
[231,] -0.194863668
[232,] -0.198072601
[233,] -0.219172111
[234,] -0.064585144
[235,] -0.125669278
[236,] -0.125478366
[237,] -0.112146317
[238,] -0.123693722
[239,]  0.142130912
[240,] -0.021077193
[241,] -0.015569709
[242,] -0.009105840
[243,] -0.043028719
[244,] -0.037628033
[245,] -0.031485056
[246,] -0.159852456
[247,] -0.231692043
[248,] -0.228601915
[249,] -0.220429079
[250,] -0.028823501
[251,] -0.102498005
[252,] -0.100617755
[253,] -0.147055698
[254,] -0.194786331
[255,] -0.168216374
[256,] -0.103166418
[257,] -0.250262541
[258,] -0.069411424
[259,] -0.095175011
[260,] -0.114084326
[261,] -0.136113019
[262,] -0.149296349
[263,] -0.174129111
[264,] -0.204676336
[265,] -0.202199087
[266,] -0.214473398
[267,] -0.233271014
[268,] -0.214004009
[269,] -0.205174646
[270,] -0.199304758
[271,] -0.159300654
[272,] -0.036161988
[273,]  0.068635868
[274,] -0.188828141
[275,] -0.251479677
[276,] -0.233580748
[277,] -0.227297546
[278,] -0.147622933
[279,] -0.012691236
> 
> plotMFs(anfis3)
> 
