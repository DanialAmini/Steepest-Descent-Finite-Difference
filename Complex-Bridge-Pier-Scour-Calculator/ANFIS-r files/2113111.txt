> 
> setwd("C:/Users/Computer Emergency/Desktop/scourpaper/Complex-Bridge-Pier-Scour-Calculator-1.0/ANFIS-r files")  #set working folder
> 
> rmse <- function(error)
+ {
+   sqrt(mean(error^2))
+ }
> #x1 log(bpg/bpc+.05)x2 log(bcol/bpc+.05)x3 log(h0/y+2.1)x4 log(h1/y+1.55)
> #x5 log(T/y+.05)x6 log(bpc/y)x7 log(f1/bcol+.05)z log(be/b*+.05)
> 
> MyData = read.csv("anfis-log_x_b3.txt",header=TRUE)
> MyData2 = read.csv("test_data.txt",header=TRUE)
> 
> 
> library("anfis")
> require("parallel")
> if(.Platform$OS.type == "windows"){
+ options(mc.cores=5)
+ }else{
+ options(mc.cores=5) 
+ }
> 
> membershipFunction<-list(
+ x1m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.91,sigma=.2))),
+ 
+ x2m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-1.3,sigma=0.4))),
+ 
+ x3m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.5,sigma=0.40)),
+       new(Class="NormalizedGaussianMF",parameters=c(mu=-1,sigma=0.40))),
+ 
+ x4m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.00,sigma=0.1))),
+ 
+ x5m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.48,sigma=0.50))),
+ 
+ x6m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.13,sigma=0.78))),
+ 
+ x7m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.27,sigma=0.5))))
> 
> X=MyData[,1:7]
> Y=MyData[,8,drop=FALSE]
> 
> X2=MyData2[,1:7]
> Y2=MyData2[,8,drop=FALSE]
> 
> X= as.matrix(as.data.frame(lapply(X, as.numeric)))
> typeof(X)
[1] "double"
> typeof(Y)
[1] "list"
> Y= as.matrix(as.data.frame(lapply(Y, as.numeric)))
> 
> X2= as.matrix(as.data.frame(lapply(X2, as.numeric)))
> Y2= as.matrix(as.data.frame(lapply(Y2, as.numeric)))
> 
> anfis3 <- new(Class="ANFIS",X,Y,membershipFunction)
> 
> trainOutput <- trainHybridJangOffLine(anfis3, epochs=10)
[1] "epoch:  1"
[1] "epoch:  2"
[1] "epoch:  3"
[1] "epoch:  4"
[1] "epoch:  5"
[1] "epoch:  6"
[1] "epoch:  7"
[1] "epoch:  8"
[1] "epoch:  9"
> 
> 
> summary(anfis3)
ANFIS network 
Trainning Set: 
         dim(x)= 279x7 
         dim(y)= 279x1 
Arquitecture:  7 ( 1x1x2x1x1x1x1 ) - 2 - 16 ( 16x1 ) - 1 
Last training error:  7.106606 

Call: trainHybridJangOffLine(object = anfis3, epochs = 10)

Statistics for Off-line training
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  7.107   7.107   7.107   7.107   7.107   7.107 
> coef(anfis3)
$`premises`
$`premises`$`x1m`
$`premises`$`x1m`[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.9285924  0.1330403 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x2m
$`premises`$x2m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-1.3012779  0.3959761 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x3m
$`premises`$x3m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
  0.5   0.4 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))

$`premises`$x3m[[2]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
 -1.0   0.4 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x4m
$`premises`$x4m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
          mu        sigma 
8.113282e-18 1.000000e-01 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x5m
$`premises`$x5m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.4814201  0.4992854 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x6m
$`premises`$x6m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.1300097  0.7799984 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x7m
$`premises`$x7m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
 0.27  0.50 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))



$consequents
                 z
 [1,] -0.074822407
 [2,]  0.193019672
 [3,]  0.570169134
 [4,] -0.152455489
 [5,] -0.016391435
 [6,] -0.006573239
 [7,] -0.108929160
 [8,] -0.270644187
 [9,]  0.504849589
[10,] -0.624155094
[11,] -1.488930144
[12,]  1.575958350
[13,] -3.096987837
[14,] -0.032779741
[15,]  0.502000806
[16,] -0.393815407

> 
> predictedY <- predict(anfis3,X)
> err=rmse(MyData$z-predictedY)
> err
[1] 0.1595986
> 
> 
> predictedY2 <- predict(anfis3,X2)
> err2=rmse(MyData2$z-predictedY2)
> err2
[1] 1.280292
> 
> graphics.off()
> dev.new()
> 
> axislimit_u= max( max(MyData$z),max(predictedY))
> axislimit_l= min( min(MyData$z),min(predictedY),0)
> xlim_=c(axislimit_l,axislimit_u)
> plot(MyData$z,predictedY,xlim=xlim_,ylim=xlim_)
> lines(c(0,axislimit_u),c(0,axislimit_u),col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*1.2),lty=2,col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*.8),lty=2,col="red")
> title(paste("train-rmse",round(err,2)))
> 
> dev.new(xpos=100)
> 
> axislimit_u= max( max(MyData2$z),max(predictedY2))
> axislimit_l= min( min(MyData2$z),min(predictedY2),0)
> xlim_=c(axislimit_l,axislimit_u)
> plot(MyData2$z,predictedY2,xlim=xlim_,ylim=xlim_)
> lines(c(0,axislimit_u),c(0,axislimit_u),col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*1.2),lty=2,col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*.8),lty=2,col="red")
> title(paste("test-rmse=",round(err2,2)))
> 
> 
> 
> 
> 
> vars=7
> 
> 
> list_coef=coef(anfis3)$consequents
> 
> no_functions=length(list_coef)/(vars+1)
> 
> for (i in 1:no_functions)
+ {
+ if(i==1){cat("\n")}
+ str=i
+ str=paste('z',i,'=',list_coef[(i-1)*(vars+1)+vars+1], sep = '')
+ for (j in 1:vars)
+ {
+ str=paste(str,'+',list_coef[(i-1)*(vars+1)+j],'*x',j, sep = '')
+ }
+ str=paste(str,"\n")
+ cat(str)
+ if(i==no_functions){cat("\n")}
+ }

z1=-0.270644187103445+-0.0748224074232473*x1+0.193019672341032*x2+0.570169133635576*x3+-0.15245548938*x4+-0.0163914349465262*x5+-0.00657323881754914*x6+-0.108929160420985*x7 
z2=-0.393815407285871+0.504849589178279*x1+-0.624155094482522*x2+-1.48893014436295*x3+1.57595835009964*x4+-3.09698783696401*x5+-0.0327797412118445*x6+0.502000805786041*x7 

> 
> 
> list_coef
                 z
 [1,] -0.074822407
 [2,]  0.193019672
 [3,]  0.570169134
 [4,] -0.152455489
 [5,] -0.016391435
 [6,] -0.006573239
 [7,] -0.108929160
 [8,] -0.270644187
 [9,]  0.504849589
[10,] -0.624155094
[11,] -1.488930144
[12,]  1.575958350
[13,] -3.096987837
[14,] -0.032779741
[15,]  0.502000806
[16,] -0.393815407
> 
> 
> for (i in 1:vars){
+ if(i==1){cat("\n")}
+ #if(length(membershipFunction[[i]])>1){
+ for (j in 1:length(membershipFunction[[i]])){
+ str=""
+ mu__=getPremises(anfis3)[[i]][[j]][1][[1]]
+ stdev__=getPremises(anfis3)[[i]][[j]][2][[1]]
+ str=paste(str,"w",i,'_',j,"=exp(-0.5*(x",i,"-",mu__,") ^ 2/",stdev__," ^ 2)",sep="")
+ cat(str,"\n")
+ }
+ cat("\n")
+ #}
+ }

w1_1=exp(-0.5*(x1--0.928592419003239) ^ 2/0.13304033473355 ^ 2) 

w2_1=exp(-0.5*(x2--1.30127788773971) ^ 2/0.395976057158486 ^ 2) 

w3_1=exp(-0.5*(x3-0.5) ^ 2/0.4 ^ 2) 
w3_2=exp(-0.5*(x3--1) ^ 2/0.4 ^ 2) 

w4_1=exp(-0.5*(x4-8.11328154454154e-18) ^ 2/0.1 ^ 2) 

w5_1=exp(-0.5*(x5--0.481420101310792) ^ 2/0.499285354645909 ^ 2) 

w6_1=exp(-0.5*(x6--0.130009718661711) ^ 2/0.779998380177512 ^ 2) 

w7_1=exp(-0.5*(x7-0.270000000000002) ^ 2/0.499999999999997 ^ 2) 

> 
> for (i in 1:no_functions){
+ str=paste('ww',i,'=',sep='')
+ for (j in 1:vars){
+ str=paste(str,'w',j,'_',getRules(anfis3)[i,j],sep='')
+ if(j<vars){str=paste(str,'*',sep='')}
+ }
+ cat(str,"\n")
+ }
ww1=w1_1*w2_1*w3_1*w4_1*w5_1*w6_1*w7_1 
ww2=w1_1*w2_1*w3_2*w4_1*w5_1*w6_1*w7_1 
> 
> str='\nwwN='
> str2='\nz='
> for (i in 1:no_functions){
+ str=paste(str,'ww',i,sep='')
+ str2=paste(str2,'z',i,'*ww',i,sep='')
+ if(i<no_functions){str=paste(str,'+',sep='')}
+ if(i<no_functions){str2=paste(str2,'+',sep='')}
+ }
> str=paste(str,'\n\n')
> str2=paste(str2,'\n\n')
> 
> cat(str)

wwN=ww1+ww2 

> cat(str2)

z=z1*ww1+z2*ww2 

> 
> fitted.values(anfis3)
                   z
  [1,] -0.1310093146
  [2,] -0.1215123873
  [3,] -0.1233299056
  [4,] -0.1277104243
  [5,] -0.1310845252
  [6,] -0.1160550229
  [7,] -0.1061124157
  [8,] -0.1490976081
  [9,] -0.1353660852
 [10,] -0.1227695307
 [11,] -0.1232189238
 [12,] -0.1322007080
 [13,] -0.1347963766
 [14,] -0.1447427713
 [15,] -0.1428108258
 [16,] -0.1563785793
 [17,] -0.1729020590
 [18,] -0.1895256938
 [19,] -0.1620129365
 [20,] -0.1904433550
 [21,] -0.2142983167
 [22,] -0.1482897798
 [23,] -0.1365174758
 [24,] -0.1645274446
 [25,] -0.1818191930
 [26,] -0.1905263593
 [27,] -0.1993608700
 [28,] -0.2083705347
 [29,] -0.2175973625
 [30,] -0.2270809811
 [31,] -0.2319314035
 [32,] -0.1262826666
 [33,] -0.1421013035
 [34,] -0.1082164152
 [35,] -0.1609925767
 [36,] -0.1609925767
 [37,] -0.1571177523
 [38,] -0.1462486504
 [39,] -0.1271204971
 [40,] -0.1290708649
 [41,] -0.1292853350
 [42,] -0.1116710774
 [43,] -0.1075984114
 [44,] -0.0760143121
 [45,] -0.0833337978
 [46,] -0.0796879803
 [47,] -0.0731215282
 [48,] -0.1832789683
 [49,] -0.1790007157
 [50,] -0.1641905271
 [51,] -0.1639654556
 [52,] -0.1734908975
 [53,] -0.1880729224
 [54,] -0.1726532687
 [55,] -0.1886854441
 [56,] -0.1867680996
 [57,] -0.1769248748
 [58,] -0.1861632816
 [59,] -0.1660482721
 [60,] -0.1775030502
 [61,] -0.1727504407
 [62,] -0.1825415330
 [63,] -0.1624515466
 [64,] -0.1911580219
 [65,] -0.2012854955
 [66,] -0.1498131894
 [67,] -0.1748729065
 [68,] -0.0892864090
 [69,] -0.1044391305
 [70,] -0.1235413057
 [71,] -0.1349519274
 [72,] -0.1172238347
 [73,]  0.0001280003
 [74,] -0.0150418049
 [75,]  0.0001766985
 [76,] -0.1613534069
 [77,] -0.1532331925
 [78,] -0.1037822051
 [79,] -0.0903447665
 [80,] -0.0773568235
 [81,] -0.1580918119
 [82,] -0.1513281682
 [83,] -0.1346463199
 [84,] -0.0495855747
 [85,] -0.1129053011
 [86,] -0.0937070507
 [87,] -0.0749266207
 [88,] -0.0983389845
 [89,] -0.0231159721
 [90,] -0.0485654922
 [91,] -0.1429451408
 [92,] -0.1215912733
 [93,] -0.1423439490
 [94,] -0.1591745007
 [95,] -0.0964169724
 [96,] -0.0938461620
 [97,] -0.0840881206
 [98,] -0.0825936993
 [99,] -0.0803271476
[100,] -0.0516537643
[101,] -0.0667243022
[102,] -0.0775034633
[103,]  0.0023401833
[104,] -0.0194798564
[105,] -0.1568860306
[106,] -0.1504323983
[107,] -0.1616881619
[108,] -0.1778360125
[109,] -0.0724764436
[110,] -0.0650850150
[111,] -0.0762552983
[112,] -0.0650850150
[113,] -0.0762552983
[114,] -0.0504211610
[115,] -0.0503194552
[116,] -0.1802414869
[117,] -0.1698352369
[118,] -0.1771557978
[119,] -0.1754012426
[120,] -0.1749396621
[121,] -0.1751804880
[122,] -0.1722245262
[123,] -0.1719901487
[124,] -0.1662536234
[125,] -0.1652788148
[126,] -0.1250240434
[127,] -0.1255430495
[128,] -0.1215395293
[129,] -0.1183186118
[130,] -0.1180482210
[131,] -0.2075322817
[132,] -0.2072796286
[133,] -0.2077038299
[134,] -0.2066819619
[135,] -0.2066819619
[136,] -0.2109263445
[137,] -0.2115380292
[138,] -0.2017430851
[139,] -0.2121658953
[140,] -0.2100243567
[141,] -0.2036669784
[142,] -0.2237283706
[143,] -0.0231498617
[144,] -0.0175559379
[145,] -0.2044156407
[146,] -0.1781610037
[147,] -0.1146350778
[148,] -0.1954114235
[149,] -0.1915520903
[150,] -0.1852522770
[151,] -0.1759450657
[152,] -0.1795394426
[153,] -0.0554535406
[154,] -0.0882243902
[155,] -0.0946991869
[156,] -0.0319207071
[157,] -0.0594293177
[158,] -0.0646822015
[159,] -0.0764781846
[160,] -0.1027821811
[161,] -0.1077045467
[162,] -0.1425080983
[163,] -0.1574320878
[164,] -0.1771105073
[165,] -0.1329629607
[166,] -0.1451421088
[167,] -0.1497492429
[168,] -0.1096677842
[169,] -0.1201331878
[170,] -0.0614906142
[171,] -0.0750212155
[172,] -0.1693231555
[173,] -0.1809253765
[174,] -0.1970599718
[175,] -0.1947208415
[176,] -0.1654115662
[177,] -0.1821312772
[178,] -0.0781689525
[179,] -0.1047584894
[180,] -0.1482945889
[181,] -0.0626480367
[182,] -0.1403100946
[183,] -0.1156733551
[184,] -0.1075817601
[185,] -0.2106512883
[186,] -0.2222425621
[187,] -0.2057012720
[188,] -0.1662087999
[189,] -0.1496148745
[190,] -0.1380870697
[191,] -0.1544288323
[192,] -0.4568037438
[193,] -0.1975752707
[194,] -0.1794736213
[195,] -0.2057012720
[196,] -0.2118062356
[197,] -0.1361815246
[198,]  0.0077621780
[199,]  0.0028020057
[200,] -0.0028388035
[201,] -0.0086265643
[202,] -0.0206924005
[203,] -0.0269985479
[204,] -0.0335082311
[205,] -0.0402398826
[206,] -0.0472142312
[207,] -0.0544546846
[208,] -0.0698437344
[209,] -0.0957202337
[210,] -0.0828436779
[211,] -0.0920983564
[212,] -0.1007015199
[213,] -0.1947227680
[214,] -0.0263410494
[215,] -0.0280713360
[216,] -0.0327633487
[217,] -0.2218890055
[218,] -0.1860230701
[219,] -0.1941144450
[220,] -0.0978411774
[221,] -0.1527597084
[222,] -0.1790014882
[223,] -0.1368057585
[224,] -0.1175904951
[225,] -0.1411021987
[226,] -0.1567326568
[227,] -0.1500211036
[228,] -0.1246630332
[229,] -0.2004909073
[230,] -0.2148482836
[231,] -0.2297865117
[232,] -0.2348528529
[233,] -0.2547964013
[234,] -0.0131398383
[235,] -0.1393155583
[236,] -0.1412700327
[237,] -0.1459539854
[238,] -0.1450680842
[239,]  0.1227207365
[240,] -0.0383893666
[241,] -0.0289831079
[242,] -0.0390026104
[243,] -0.0653518480
[244,] -0.0545402017
[245,] -0.0449692781
[246,] -0.1688577194
[247,] -0.2054309228
[248,] -0.2308125921
[249,] -0.2194696670
[250,] -0.1155383984
[251,] -0.1233860880
[252,] -0.1210374614
[253,] -0.1658988733
[254,] -0.2089417952
[255,] -0.2017859253
[256,] -0.1785248998
[257,]  0.0022951017
[258,] -0.0913267139
[259,] -0.1318687425
[260,] -0.1591187583
[261,] -0.2050598673
[262,] -0.2288102846
[263,] -0.2204594058
[264,] -0.2438724362
[265,] -0.1875600074
[266,] -0.1982091049
[267,] -0.2079236339
[268,] -0.2585474387
[269,] -0.2647542334
[270,] -0.2340312138
[271,] -0.1320605600
[272,] -0.0958991308
[273,] -0.0293576000
[274,] -0.0947225127
[275,] -0.2543327978
[276,] -0.2428124804
[277,] -0.2340231206
[278,] -0.1693682322
[279,] -0.0820887022
> 
> plotMFs(anfis3)
> 
