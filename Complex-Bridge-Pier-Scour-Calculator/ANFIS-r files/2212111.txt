> > 
> setwd("C:/Users/Computer Emergency/Desktop/scourpaper/Complex-Bridge-Pier-Scour-Calculator-1.0/ANFIS-r files")  #set working folder
> 
> rmse <- function(error)
+ {
+   sqrt(mean(error^2))
+ }
> #x1 log(bpg/bpc+.05)x2 log(bcol/bpc+.05)x3 log(h0/y+2.1)x4 log(h1/y+1.55)
> #x5 log(T/y+.05)x6 log(bpc/y)x7 log(f1/bcol+.05)z log(be/b*+.05)
> 
> MyData = read.csv("anfis-log_x_b3.txt",header=TRUE)
> MyData2 = read.csv("test_data.txt",header=TRUE)
> 
> 
> library("anfis")
> require("parallel")
> if(.Platform$OS.type == "windows"){
+ options(mc.cores=5)
+ }else{
+ options(mc.cores=5) 
+ }
> 
> membershipFunction<-list(
+ x1m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.91,sigma=.2)),
+       new(Class="NormalizedGaussianMF",parameters=c(mu=-.25,sigma=.2))),
+ 
+ x2m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-1.3,sigma=0.4)),
+       new(Class="NormalizedGaussianMF",parameters=c(mu=.02,sigma=0.4))),
+ 
+ x3m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.29,sigma=0.80))),
+ 
+ x4m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.00,sigma=0.1)),
+       new(Class="NormalizedGaussianMF",parameters=c(mu=.41,sigma=0.1))),
+ 
+ x5m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.48,sigma=0.50))),
+ 
+ x6m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.13,sigma=0.78))),
+ 
+ x7m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.27,sigma=0.5))))
> 
> X=MyData[,1:7]
> Y=MyData[,8,drop=FALSE]
> 
> X2=MyData2[,1:7]
> Y2=MyData2[,8,drop=FALSE]
> 
> X= as.matrix(as.data.frame(lapply(X, as.numeric)))
> typeof(X)
[1] "double"
> typeof(Y)
[1] "list"
> Y= as.matrix(as.data.frame(lapply(Y, as.numeric)))
> 
> X2= as.matrix(as.data.frame(lapply(X2, as.numeric)))
> Y2= as.matrix(as.data.frame(lapply(Y2, as.numeric)))
> 
> anfis3 <- new(Class="ANFIS",X,Y,membershipFunction)
> 
> trainOutput <- trainHybridJangOffLine(anfis3, epochs=10)
[1] "epoch:  1"
[1] "epoch:  2"
[1] "epoch:  3"
[1] "epoch:  4"
[1] "epoch:  5"
[1] "epoch:  6"
[1] "epoch:  7"
[1] "epoch:  8"
[1] "epoch:  9"
> 
> 
> summary(anfis3)
ANFIS network 
Trainning Set: 
         dim(x)= 279x7 
         dim(y)= 279x1 
Arquitecture:  7 ( 2x2x1x2x1x1x1 ) - 8 - 64 ( 64x1 ) - 1 
Last training error:  5.024512 

Call: trainHybridJangOffLine(object = anfis3, epochs = 10)

Statistics for Off-line training
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  4.954   4.971   4.988   4.988   5.006   5.025 
> coef(anfis3)
$`premises`
$`premises`$`x1m`
$`premises`$`x1m`[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.9091011  0.2027027 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))

$`premises`$`x1m`[[2]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.2496141  0.1998937 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x2m
$`premises`$x2m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-1.3207452  0.3288493 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))

$`premises`$x2m[[2]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
0.02184457 0.39969344 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x3m
$`premises`$x3m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
 0.29  0.80 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x4m
$`premises`$x4m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
          mu        sigma 
1.052301e-21 1.000000e-01 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))

$`premises`$x4m[[2]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
 0.41  0.10 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x5m
$`premises`$x5m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.4814978  0.4992461 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x6m
$`premises`$x6m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.1310895  0.7798178 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x7m
$`premises`$x7m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
 0.27  0.50 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))



$consequents
                 z
 [1,] -0.742404844
 [2,]  1.143166785
 [3,] -0.800224943
 [4,] -0.133605033
 [5,]  2.772386994
 [6,]  2.525050138
 [7,]  0.631071383
 [8,] -1.018351463
 [9,] -0.048046375
[10,] -4.711860615
[11,]  3.426529894
[12,] -1.180610265
[13,] -0.393742849
[14,]  2.067024764
[15,]  0.389518463
[16,] -1.689131369
[17,]  1.189876229
[18,]  0.756559652
[19,]  0.001249641
[20,] -0.093447635
[21,] -2.215687810
[22,]  2.405569818
[23,] -1.718064000
[24,] -2.495446858
[25,]  1.202331690
[26,] -3.208059988
[27,] -0.820837368
[28,]  0.491320385
[29,] -1.472161611
[30,]  1.313840478
[31,] -0.105509058
[32,] -0.391343100
[33,]  4.448900139
[34,]  1.710018171
[35,] -3.053949332
[36,] -3.193974667
[37,] -3.998911760
[38,]  3.113801914
[39,]  0.239872679
[40,]  1.043893124
[41,]  0.226997935
[42,] -0.003683107
[43,]  0.615368955
[44,] -0.847060261
[45,]  0.099567321
[46,] -0.505302476
[47,] -0.371750117
[48,] -0.267169538
[49,] -0.186052774
[50,]  2.677894170
[51,]  1.040563192
[52,]  2.888233151
[53,]  0.193242108
[54,]  0.123222657
[55,] -1.259596434
[56,]  0.118684880
[57,]  0.720608067
[58,]  0.025780753
[59,]  0.227201782
[60,] -0.776282731
[61,]  0.077832062
[62,] -0.100767664
[63,]  0.021597383
[64,]  0.324908624

> 
> predictedY <- predict(anfis3,X)
> err=rmse(MyData$z-predictedY)
> err
[1] 0.1349577
> 
> 
> predictedY2 <- predict(anfis3,X2)
> err2=rmse(MyData2$z-predictedY2)
> err2
[1] 1.259055
> 
> graphics.off()
> dev.new()
> 
> axislimit_u= max( max(MyData$z),max(predictedY))
> axislimit_l= min( min(MyData$z),min(predictedY),0)
> xlim_=c(axislimit_l,axislimit_u)
> plot(MyData$z,predictedY,xlim=xlim_,ylim=xlim_)
> lines(c(0,axislimit_u),c(0,axislimit_u),col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*1.2),lty=2,col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*.8),lty=2,col="red")
> title(paste("train-rmse",round(err,2)))
> 
> dev.new(xpos=100)
> 
> axislimit_u= max( max(MyData2$z),max(predictedY2))
> axislimit_l= min( min(MyData2$z),min(predictedY2),0)
> xlim_=c(axislimit_l,axislimit_u)
> plot(MyData2$z,predictedY2,xlim=xlim_,ylim=xlim_)
> lines(c(0,axislimit_u),c(0,axislimit_u),col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*1.2),lty=2,col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*.8),lty=2,col="red")
> title(paste("test-rmse=",round(err2,2)))
> 
> dev.new()
> 
> 
> 
> vars=7
> 
> 
> list_coef=coef(anfis3)$consequents
> 
> no_functions=length(list_coef)/(vars+1)
> 
> for (i in 1:no_functions)
+ {
+ if(i==1){cat("\n")}
+ str=i
+ str=paste('z',i,'=',list_coef[(i-1)*(vars+1)+vars+1], sep = '')
+ for (j in 1:vars)
+ {
+ str=paste(str,'+',list_coef[(i-1)*(vars+1)+j],'*x',j, sep = '')
+ }
+ str=paste(str,"\n")
+ cat(str)
+ if(i==no_functions){cat("\n")}
+ }

z1=-1.01835146256561+-0.742404843715195*x1+1.14316678518214*x2+-0.800224943180334*x3+-0.133605032908839*x4+2.77238699449761*x5+2.5250501384745*x6+0.631071383279094*x7 
z2=-1.68913136900089+-0.0480463752779577*x1+-4.71186061518072*x2+3.42652989419085*x3+-1.1806102650087*x4+-0.393742848650525*x5+2.06702476366672*x6+0.389518463372688*x7 
z3=-2.49544685812843+1.18987622866901*x1+0.7565596522623*x2+0.00124964087763266*x3+-0.0934476352948165*x4+-2.21568781029091*x5+2.40556981774517*x6+-1.71806400041626*x7 
z4=-0.391343100417306+1.20233168958963*x1+-3.20805998803185*x2+-0.8208373682057*x3+0.491320384620499*x4+-1.47216161149959*x5+1.31384047764767*x6+-0.105509057633168*x7 
z5=1.04389312394565+4.44890013944209*x1+1.71001817128891*x2+-3.05394933150439*x3+-3.19397466724879*x4+-3.998911760446*x5+3.11380191393076*x6+0.239872678923655*x7 
z6=-0.26716953786584+0.226997934899868*x1+-0.00368310716512688*x2+0.61536895512993*x3+-0.847060261437646*x4+0.0995673205229172*x5+-0.505302476237962*x6+-0.371750117372677*x7 
z7=0.118684879996967+-0.186052773832496*x1+2.67789417026988*x2+1.04056319208634*x3+2.88823315089427*x4+0.193242107601328*x5+0.123222656803402*x6+-1.25959643380018*x7 
z8=0.324908624204411+0.72060806748468*x1+0.0257807525391722*x2+0.227201781639948*x3+-0.776282731363156*x4+0.0778320623159024*x5+-0.100767663749117*x6+0.0215973832823076*x7 

> 
> 
> list_coef
                 z
 [1,] -0.742404844
 [2,]  1.143166785
 [3,] -0.800224943
 [4,] -0.133605033
 [5,]  2.772386994
 [6,]  2.525050138
 [7,]  0.631071383
 [8,] -1.018351463
 [9,] -0.048046375
[10,] -4.711860615
[11,]  3.426529894
[12,] -1.180610265
[13,] -0.393742849
[14,]  2.067024764
[15,]  0.389518463
[16,] -1.689131369
[17,]  1.189876229
[18,]  0.756559652
[19,]  0.001249641
[20,] -0.093447635
[21,] -2.215687810
[22,]  2.405569818
[23,] -1.718064000
[24,] -2.495446858
[25,]  1.202331690
[26,] -3.208059988
[27,] -0.820837368
[28,]  0.491320385
[29,] -1.472161611
[30,]  1.313840478
[31,] -0.105509058
[32,] -0.391343100
[33,]  4.448900139
[34,]  1.710018171
[35,] -3.053949332
[36,] -3.193974667
[37,] -3.998911760
[38,]  3.113801914
[39,]  0.239872679
[40,]  1.043893124
[41,]  0.226997935
[42,] -0.003683107
[43,]  0.615368955
[44,] -0.847060261
[45,]  0.099567321
[46,] -0.505302476
[47,] -0.371750117
[48,] -0.267169538
[49,] -0.186052774
[50,]  2.677894170
[51,]  1.040563192
[52,]  2.888233151
[53,]  0.193242108
[54,]  0.123222657
[55,] -1.259596434
[56,]  0.118684880
[57,]  0.720608067
[58,]  0.025780753
[59,]  0.227201782
[60,] -0.776282731
[61,]  0.077832062
[62,] -0.100767664
[63,]  0.021597383
[64,]  0.324908624
> 
> 
> for (i in 1:vars){
+ if(i==1){cat("\n")}
+ #if(length(membershipFunction[[i]])>1){
+ for (j in 1:length(membershipFunction[[i]])){
+ str=""
+ mu__=getPremises(anfis3)[[i]][[j]][1][[1]]
+ stdev__=getPremises(anfis3)[[i]][[j]][2][[1]]
+ str=paste(str,"w",i,'_',j,"=exp(-0.5*(x",i,"-",mu__,") ^ 2/",stdev__," ^ 2)",sep="")
+ cat(str,"\n")
+ }
+ cat("\n")
+ #}
+ }

w1_1=exp(-0.5*(x1--0.909101098592022) ^ 2/0.202702664949908 ^ 2) 
w1_2=exp(-0.5*(x1--0.2496140799027) ^ 2/0.199893748891913 ^ 2) 

w2_1=exp(-0.5*(x2--1.32074518949308) ^ 2/0.328849345940787 ^ 2) 
w2_2=exp(-0.5*(x2-0.0218445740835534) ^ 2/0.399693444940338 ^ 2) 

w3_1=exp(-0.5*(x3-0.29) ^ 2/0.8 ^ 2) 

w4_1=exp(-0.5*(x4-1.05230111884265e-21) ^ 2/0.1 ^ 2) 
w4_2=exp(-0.5*(x4-0.41) ^ 2/0.1 ^ 2) 

w5_1=exp(-0.5*(x5--0.481497771658309) ^ 2/0.499246085289803 ^ 2) 

w6_1=exp(-0.5*(x6--0.131089497761136) ^ 2/0.779817773310947 ^ 2) 

w7_1=exp(-0.5*(x7-0.27) ^ 2/0.5 ^ 2) 

> 
> for (i in 1:no_functions){
+ str=paste('ww',i,'=',sep='')
+ for (j in 1:vars){
+ str=paste(str,'w',j,'_',getRules(anfis3)[i,j],sep='')
+ if(j<vars){str=paste(str,'*',sep='')}
+ }
+ cat(str,"\n")
+ }
ww1=w1_1*w2_1*w3_1*w4_1*w5_1*w6_1*w7_1 
ww2=w1_1*w2_2*w3_1*w4_1*w5_1*w6_1*w7_1 
ww3=w1_1*w2_1*w3_1*w4_2*w5_1*w6_1*w7_1 
ww4=w1_1*w2_2*w3_1*w4_2*w5_1*w6_1*w7_1 
ww5=w1_2*w2_1*w3_1*w4_1*w5_1*w6_1*w7_1 
ww6=w1_2*w2_2*w3_1*w4_1*w5_1*w6_1*w7_1 
ww7=w1_2*w2_1*w3_1*w4_2*w5_1*w6_1*w7_1 
ww8=w1_2*w2_2*w3_1*w4_2*w5_1*w6_1*w7_1 
> 
> str='\nwwN='
> str2='\nz='
> for (i in 1:no_functions){
+ str=paste(str,'ww',i,sep='')
+ str2=paste(str2,'z',i,'*ww',i,sep='')
+ if(i<no_functions){str=paste(str,'+',sep='')}
+ if(i<no_functions){str2=paste(str2,'+',sep='')}
+ }
> str=paste(str,'\n\n')
> str2=paste(str2,'\n\n')
> 
> cat(str)

wwN=ww1+ww2+ww3+ww4+ww5+ww6+ww7+ww8 

> cat(str2)

z=z1*ww1+z2*ww2+z3*ww3+z4*ww4+z5*ww5+z6*ww6+z7*ww7+z8*ww8 

> 
> fitted.values(anfis3)
                  z
  [1,] -0.177313831
  [2,] -0.161586390
  [3,] -0.172066410
  [4,] -0.183116977
  [5,] -0.206792128
  [6,] -0.171430630
  [7,] -0.135503978
  [8,] -0.138675996
  [9,] -0.161473222
 [10,] -0.164286305
 [11,] -0.161178895
 [12,] -0.155054973
 [13,] -0.160769749
 [14,] -0.142002018
 [15,] -0.073592101
 [16,] -0.101553738
 [17,] -0.100792100
 [18,] -0.108132619
 [19,] -0.130253262
 [20,] -0.154557754
 [21,] -0.168736136
 [22,] -0.227273955
 [23,] -0.194734656
 [24,] -0.153451596
 [25,] -0.151852786
 [26,] -0.154596941
 [27,] -0.159097801
 [28,] -0.165099351
 [29,] -0.172431280
 [30,] -0.180980026
 [31,] -0.185686417
 [32,] -0.039233338
 [33,] -0.171607709
 [34,] -0.100368922
 [35,] -0.093827361
 [36,] -0.093827361
 [37,] -0.084214699
 [38,] -0.073808560
 [39,] -0.072923760
 [40,] -0.072834380
 [41,] -0.072798221
 [42,] -0.120186604
 [43,] -0.123712913
 [44,] -0.166892900
 [45,] -0.155792532
 [46,] -0.162207388
 [47,] -0.172159854
 [48,] -0.202949304
 [49,] -0.184813880
 [50,] -0.140044101
 [51,] -0.073431664
 [52,] -0.097609145
 [53,] -0.143816173
 [54,] -0.192585983
 [55,] -0.260838388
 [56,] -0.176493069
 [57,] -0.107308093
 [58,] -0.136325970
 [59,] -0.143002085
 [60,] -0.180154060
 [61,] -0.191291077
 [62,] -0.226571252
 [63,] -0.163623384
 [64,] -0.193308031
 [65,] -0.242983902
 [66,] -0.127717374
 [67,] -0.106266363
 [68,] -0.038303037
 [69,] -0.018298073
 [70,] -0.007934597
 [71,] -0.091476995
 [72,] -0.004947343
 [73,] -0.074598207
 [74,] -0.060264988
 [75,] -0.088505373
 [76,] -0.137012755
 [77,] -0.145638590
 [78,] -0.012753154
 [79,] -0.023582865
 [80,] -0.034238985
 [81,] -0.067075431
 [82,] -0.076480295
 [83,] -0.100847648
 [84,] -0.122287802
 [85,] -0.112382066
 [86,] -0.112801544
 [87,] -0.116063392
 [88,] -0.085592164
 [89,] -0.070418316
 [90,] -0.032038621
 [91,] -0.098650988
 [92,] -0.099890560
 [93,] -0.078020880
 [94,] -0.067340016
 [95,] -0.128294381
 [96,] -0.123692880
 [97,] -0.103167485
 [98,] -0.104866750
 [99,] -0.118680592
[100,] -0.163559116
[101,] -0.142900319
[102,] -0.129824894
[103,]  0.080921315
[104,]  0.077967666
[105,]  0.014447456
[106,]  0.009131298
[107,] -0.095635748
[108,] -0.116715254
[109,]  0.083986425
[110,] -0.147384585
[111,] -0.133521033
[112,] -0.147384585
[113,] -0.133521033
[114,] -0.166396824
[115,] -0.166970204
[116,] -0.213860708
[117,] -0.139710309
[118,] -0.201994098
[119,] -0.179323830
[120,] -0.174763843
[121,] -0.174761347
[122,] -0.153859684
[123,] -0.149831390
[124,] -0.119606745
[125,] -0.108656457
[126,] -0.118637665
[127,] -0.119685454
[128,] -0.116066780
[129,] -0.115049287
[130,] -0.115940438
[131,] -0.361552978
[132,] -0.485568677
[133,] -0.384940608
[134,] -0.361103698
[135,] -0.361103698
[136,] -0.313173833
[137,] -0.316410256
[138,] -0.387903553
[139,] -0.323333709
[140,] -0.306805575
[141,] -0.106481527
[142,] -0.231098552
[143,] -0.050428051
[144,] -0.050467817
[145,] -0.130437716
[146,] -0.120217975
[147,] -0.025635728
[148,] -0.173052151
[149,] -0.128975965
[150,] -0.079858720
[151,] -0.054866266
[152,] -0.059595006
[153,] -0.094480348
[154,] -0.079463494
[155,] -0.083107819
[156,] -0.093510185
[157,] -0.072457635
[158,] -0.073711702
[159,] -0.089224298
[160,] -0.104360203
[161,] -0.119761720
[162,] -0.084701684
[163,] -0.090575563
[164,] -0.168328529
[165,] -0.087540892
[166,] -0.130676934
[167,] -0.158276408
[168,] -0.087821708
[169,] -0.127114463
[170,] -0.018072490
[171,] -0.020976798
[172,] -0.076721113
[173,] -0.091077354
[174,] -0.201511349
[175,] -0.097360550
[176,] -0.072580095
[177,] -0.179665405
[178,] -0.043342950
[179,] -0.047585267
[180,] -0.056078334
[181,] -0.018531089
[182,] -0.159731049
[183,] -0.105309280
[184,] -0.134240502
[185,] -0.222651443
[186,] -0.166748580
[187,] -0.154478728
[188,] -0.128390833
[189,] -0.120109505
[190,] -0.116031759
[191,] -0.122262700
[192,] -0.340836868
[193,] -0.148650289
[194,] -0.136409756
[195,] -0.154478728
[196,] -0.158954047
[197,] -0.115532556
[198,] -0.071605022
[199,] -0.072210655
[200,] -0.072957066
[201,] -0.073779423
[202,] -0.075647931
[203,] -0.076692887
[204,] -0.077811356
[205,] -0.079003483
[206,] -0.080269690
[207,] -0.081610671
[208,] -0.084521083
[209,] -0.089480599
[210,] -0.125804195
[211,] -0.130407755
[212,] -0.158031775
[213,] -0.243960475
[214,]  0.071308640
[215,]  0.069431859
[216,]  0.066110383
[217,] -0.005012771
[218,] -0.160880235
[219,] -0.242029915
[220,]  0.131087576
[221,] -0.010883805
[222,] -0.227414161
[223,] -0.173757334
[224,] -0.150597913
[225,] -0.181497454
[226,] -0.220793771
[227,] -0.210901132
[228,]  0.066809558
[229,] -0.295816336
[230,] -0.387213129
[231,] -0.290530505
[232,] -0.330377834
[233,] -0.366360804
[234,] -0.034833578
[235,] -0.149996372
[236,] -0.169842969
[237,] -0.159462796
[238,] -0.186241055
[239,]  0.210642899
[240,] -0.048715612
[241,] -0.052594946
[242,]  0.102244835
[243,] -0.012878875
[244,] -0.029849754
[245,] -0.029208120
[246,] -0.156780485
[247,] -0.238591929
[248,] -0.292878116
[249,] -0.222536572
[250,] -0.029453667
[251,] -0.083643080
[252,] -0.063883722
[253,] -0.279852041
[254,] -0.313177218
[255,] -0.250109324
[256,] -0.090729400
[257,]  0.002026900
[258,] -0.079605088
[259,] -0.171364007
[260,] -0.158677070
[261,] -0.271289099
[262,] -0.268461606
[263,] -0.296790961
[264,] -0.366787018
[265,] -0.236216818
[266,] -0.290388013
[267,] -0.273258431
[268,] -0.421711292
[269,] -0.418709113
[270,] -0.350009011
[271,] -0.244523519
[272,] -0.175260765
[273,]  0.092676941
[274,]  0.130663123
[275,] -0.125193559
[276,] -0.090688982
[277,] -0.062400121
[278,] -0.141428128
[279,]  0.157210407
> 
> plotMFs(anfis3)
> 
