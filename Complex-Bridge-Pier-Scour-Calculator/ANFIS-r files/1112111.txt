> 
> setwd("C:/Users/Computer Emergency/Desktop/scourpaper/Complex-Bridge-Pier-Scour-Calculator-1.0/ANFIS-r files")  #set working folder
> 
> rmse <- function(error)
+ {
+   sqrt(mean(error^2))
+ }
> #x1 log(bpg/bpc+.05)x2 log(bcol/bpc+.05)x3 log(h0/y+2.1)x4 log(h1/y+1.55)
> #x5 log(T/y+.05)x6 log(bpc/y)x7 log(f1/bcol+.05)z log(be/b*+.05)
> 
> MyData = read.csv("anfis-log_x_b3.txt",header=TRUE)
> MyData2 = read.csv("test_data.txt",header=TRUE)
> 
> 
> library("anfis")
> require("parallel")
> if(.Platform$OS.type == "windows"){
+ options(mc.cores=5)
+ }else{
+ options(mc.cores=5) 
+ }
> 
> membershipFunction<-list(
+ x1m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.91,sigma=.2))),
+ 
+ x2m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-1.3,sigma=0.4))),
+ 
+ x3m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.29,sigma=0.80))),
+ 
+ x4m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.00,sigma=0.1)),
+       new(Class="NormalizedGaussianMF",parameters=c(mu=.41,sigma=0.1))),
+ 
+ x5m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.48,sigma=0.50))),
+ 
+ x6m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.13,sigma=0.78))),
+ 
+ x7m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.27,sigma=0.5))))
> 
> X=MyData[,1:7]
> Y=MyData[,8,drop=FALSE]
> 
> X2=MyData2[,1:7]
> Y2=MyData2[,8,drop=FALSE]
> 
> X= as.matrix(as.data.frame(lapply(X, as.numeric)))
> typeof(X)
[1] "double"
> typeof(Y)
[1] "list"
> Y= as.matrix(as.data.frame(lapply(Y, as.numeric)))
> 
> X2= as.matrix(as.data.frame(lapply(X2, as.numeric)))
> Y2= as.matrix(as.data.frame(lapply(Y2, as.numeric)))
> 
> anfis3 <- new(Class="ANFIS",X,Y,membershipFunction)
> 
> trainOutput <- trainHybridJangOffLine(anfis3, epochs=10)
[1] "epoch:  1"
[1] "epoch:  2"
[1] "epoch:  3"
[1] "epoch:  4"
[1] "epoch:  5"
[1] "epoch:  6"
[1] "epoch:  7"
[1] "epoch:  8"
[1] "epoch:  9"
> 
> 
> summary(anfis3)
ANFIS network 
Trainning Set: 
         dim(x)= 279x7 
         dim(y)= 279x1 
Arquitecture:  7 ( 1x1x1x2x1x1x1 ) - 2 - 16 ( 16x1 ) - 1 
Last training error:  6.742444 

Call: trainHybridJangOffLine(object = anfis3, epochs = 10)

Statistics for Off-line training
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  6.742   6.742   6.742   6.742   6.742   6.742 
> coef(anfis3)
$`premises`
$`premises`$`x1m`
$`premises`$`x1m`[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.9099948  0.2000157 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x2m
$`premises`$x2m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-1.2773332  0.4657065 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x3m
$`premises`$x3m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
 0.29  0.80 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x4m
$`premises`$x4m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
          mu        sigma 
-9.52092e-22  1.00000e-01 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))

$`premises`$x4m[[2]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
 0.41  0.10 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x5m
$`premises`$x5m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.4799865  0.5000068 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x6m
$`premises`$x6m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.1286401  0.7802256 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x7m
$`premises`$x7m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
 0.27  0.50 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))



$consequents
                z
 [1,] -0.27532855
 [2,]  0.40175712
 [3,]  0.64430401
 [4,] -0.84463670
 [5,] -0.11588036
 [6,] -0.02383869
 [7,] -0.18557453
 [8,] -0.31000813
 [9,] -0.02889488
[10,]  0.10756823
[11,] -0.03697463
[12,] -0.03263368
[13,] -0.05135577
[14,]  0.01241694
[15,] -0.05147004
[16,] -0.08731337

> 
> predictedY <- predict(anfis3,X)
> err=rmse(MyData$z-predictedY)
> err
[1] 0.1554557
> 
> 
> predictedY2 <- predict(anfis3,X2)
> err2=rmse(MyData2$z-predictedY2)
> err2
[1] 1.095963
> 
> graphics.off()
> dev.new()
> 
> axislimit_u= max( max(MyData$z),max(predictedY))
> axislimit_l= min( min(MyData$z),min(predictedY),0)
> xlim_=c(axislimit_l,axislimit_u)
> plot(MyData$z,predictedY,xlim=xlim_,ylim=xlim_)
> lines(c(0,axislimit_u),c(0,axislimit_u),col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*1.2),lty=2,col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*.8),lty=2,col="red")
> title(paste("train-rmse",round(err,2)))
> 
> dev.new(xpos=100)
> 
> axislimit_u= max( max(MyData2$z),max(predictedY2))
> axislimit_l= min( min(MyData2$z),min(predictedY2),0)
> xlim_=c(axislimit_l,axislimit_u)
> plot(MyData2$z,predictedY2,xlim=xlim_,ylim=xlim_)
> lines(c(0,axislimit_u),c(0,axislimit_u),col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*1.2),lty=2,col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*.8),lty=2,col="red")
> title(paste("test-rmse=",round(err2,2)))
> 
> dev.new()
> 
> 
> 
> vars=7
> 
> 
> list_coef=coef(anfis3)$consequents
> 
> no_functions=length(list_coef)/(vars+1)
> 
> for (i in 1:no_functions)
+ {
+ if(i==1){cat("\n")}
+ str=i
+ str=paste('z',i,'=',list_coef[(i-1)*(vars+1)+vars+1], sep = '')
+ for (j in 1:vars)
+ {
+ str=paste(str,'+',list_coef[(i-1)*(vars+1)+j],'*x',j, sep = '')
+ }
+ str=paste(str,"\n")
+ cat(str)
+ if(i==no_functions){cat("\n")}
+ }

z1=-0.310008127179079+-0.275328545436239*x1+0.401757121984708*x2+0.644304011361518*x3+-0.844636703989722*x4+-0.115880358689227*x5+-0.0238386860433332*x6+-0.185574529180822*x7 
z2=-0.0873133710735259+-0.0288948762887484*x1+0.107568230538316*x2+-0.0369746276151285*x3+-0.0326336843619668*x4+-0.0513557743503176*x5+0.0124169418240535*x6+-0.0514700418445631*x7 

> 
> 
> list_coef
                z
 [1,] -0.27532855
 [2,]  0.40175712
 [3,]  0.64430401
 [4,] -0.84463670
 [5,] -0.11588036
 [6,] -0.02383869
 [7,] -0.18557453
 [8,] -0.31000813
 [9,] -0.02889488
[10,]  0.10756823
[11,] -0.03697463
[12,] -0.03263368
[13,] -0.05135577
[14,]  0.01241694
[15,] -0.05147004
[16,] -0.08731337
> 
> 
> for (i in 1:vars){
+ if(i==1){cat("\n")}
+ #if(length(membershipFunction[[i]])>1){
+ for (j in 1:length(membershipFunction[[i]])){
+ str=""
+ mu__=getPremises(anfis3)[[i]][[j]][1][[1]]
+ stdev__=getPremises(anfis3)[[i]][[j]][2][[1]]
+ str=paste(str,"w",i,'_',j,"=exp(-0.5*(x",i,"-",mu__,") ^ 2/",stdev__," ^ 2)",sep="")
+ cat(str,"\n")
+ }
+ cat("\n")
+ #}
+ }

w1_1=exp(-0.5*(x1--0.909994802311506) ^ 2/0.200015725495749 ^ 2) 

w2_1=exp(-0.5*(x2--1.27733319755105) ^ 2/0.465706474820457 ^ 2) 

w3_1=exp(-0.5*(x3-0.29) ^ 2/0.8 ^ 2) 

w4_1=exp(-0.5*(x4--9.52092027096123e-22) ^ 2/0.1 ^ 2) 
w4_2=exp(-0.5*(x4-0.41) ^ 2/0.1 ^ 2) 

w5_1=exp(-0.5*(x5--0.479986490051518) ^ 2/0.500006777792443 ^ 2) 

w6_1=exp(-0.5*(x6--0.128640064460811) ^ 2/0.780225576266237 ^ 2) 

w7_1=exp(-0.5*(x7-0.27) ^ 2/0.5 ^ 2) 

> 
> for (i in 1:no_functions){
+ str=paste('ww',i,'=',sep='')
+ for (j in 1:vars){
+ str=paste(str,'w',j,'_',getRules(anfis3)[i,j],sep='')
+ if(j<vars){str=paste(str,'*',sep='')}
+ }
+ cat(str,"\n")
+ }
ww1=w1_1*w2_1*w3_1*w4_1*w5_1*w6_1*w7_1 
ww2=w1_1*w2_1*w3_1*w4_2*w5_1*w6_1*w7_1 
> 
> str='\nwwN='
> str2='\nz='
> for (i in 1:no_functions){
+ str=paste(str,'ww',i,sep='')
+ str2=paste(str2,'z',i,'*ww',i,sep='')
+ if(i<no_functions){str=paste(str,'+',sep='')}
+ if(i<no_functions){str2=paste(str2,'+',sep='')}
+ }
> str=paste(str,'\n\n')
> str2=paste(str2,'\n\n')
> 
> cat(str)

wwN=ww1+ww2 

> cat(str2)

z=z1*ww1+z2*ww2 

> 
> fitted.values(anfis3)
                  z
  [1,] -0.147745620
  [2,] -0.138972114
  [3,] -0.141292234
  [4,] -0.145607530
  [5,] -0.148622794
  [6,] -0.134517532
  [7,] -0.120094455
  [8,] -0.156706403
  [9,] -0.145580906
 [10,] -0.139944795
 [11,] -0.140188283
 [12,] -0.147614956
 [13,] -0.144847511
 [14,] -0.153494571
 [15,] -0.149632123
 [16,] -0.158215624
 [17,] -0.165291387
 [18,] -0.170211848
 [19,] -0.163341385
 [20,] -0.175952164
 [21,] -0.181271676
 [22,] -0.155250630
 [23,] -0.146351923
 [24,] -0.166655331
 [25,] -0.173441043
 [26,] -0.175997260
 [27,] -0.178171604
 [28,] -0.180041822
 [29,] -0.181662614
 [30,] -0.183073745
 [31,] -0.183710255
 [32,] -0.140033837
 [33,] -0.156200281
 [34,] -0.097798159
 [35,] -0.133949904
 [36,] -0.133949904
 [37,] -0.128634076
 [38,] -0.124797751
 [39,] -0.126236344
 [40,] -0.126016798
 [41,] -0.125760200
 [42,] -0.099767266
 [43,] -0.098727461
 [44,] -0.101878638
 [45,] -0.100360302
 [46,] -0.101350694
 [47,] -0.102762820
 [48,] -0.142959751
 [49,] -0.141046999
 [50,] -0.140840501
 [51,] -0.146633132
 [52,] -0.145269604
 [53,] -0.145272988
 [54,] -0.139020850
 [55,] -0.148464004
 [56,] -0.143844461
 [57,] -0.144929639
 [58,] -0.144896684
 [59,] -0.140878429
 [60,] -0.140699690
 [61,] -0.139345387
 [62,] -0.141395938
 [63,] -0.140276683
 [64,] -0.145296776
 [65,] -0.160578704
 [66,] -0.133905122
 [67,] -0.130584919
 [68,] -0.086988372
 [69,] -0.084071653
 [70,] -0.089260657
 [71,] -0.131489479
 [72,] -0.084215537
 [73,] -0.033648326
 [74,] -0.047036376
 [75,] -0.049718851
 [76,] -0.133528413
 [77,] -0.134700719
 [78,] -0.096853519
 [79,] -0.095822019
 [80,] -0.097789248
 [81,] -0.128219302
 [82,] -0.128725535
 [83,] -0.131329685
 [84,] -0.072074476
 [85,] -0.099805154
 [86,] -0.094971523
 [87,] -0.087963905
 [88,] -0.088054595
 [89,] -0.063405764
 [90,] -0.061481220
 [91,] -0.121016995
 [92,] -0.121569482
 [93,] -0.118389317
 [94,] -0.121586420
 [95,] -0.093569570
 [96,] -0.092043994
 [97,] -0.084838237
 [98,] -0.084651018
 [99,] -0.087571836
[100,] -0.083035435
[101,] -0.080826096
[102,] -0.080897558
[103,] -0.057545129
[104,] -0.052665682
[105,] -0.132016161
[106,] -0.133029918
[107,] -0.133366282
[108,] -0.145632879
[109,] -0.088548143
[110,] -0.080234692
[111,] -0.080192455
[112,] -0.080234692
[113,] -0.080192455
[114,] -0.081939213
[115,] -0.082116253
[116,] -0.212726110
[117,] -0.162193181
[118,] -0.203737658
[119,] -0.188556549
[120,] -0.185512200
[121,] -0.185602775
[122,] -0.171573157
[123,] -0.169044661
[124,] -0.149278480
[125,] -0.142929180
[126,] -0.112863621
[127,] -0.114949950
[128,] -0.107712934
[129,] -0.104626439
[130,] -0.103620917
[131,] -0.209585844
[132,] -0.246053574
[133,] -0.221555786
[134,] -0.214375284
[135,] -0.214375284
[136,] -0.217689477
[137,] -0.221729825
[138,] -0.206895328
[139,] -0.230348219
[140,] -0.209771345
[141,] -0.147107573
[142,] -0.251136366
[143,] -0.022194928
[144,] -0.027656392
[145,] -0.170042440
[146,] -0.132824453
[147,] -0.104052297
[148,] -0.224967569
[149,] -0.195819656
[150,] -0.160326548
[151,] -0.136045083
[152,] -0.142370517
[153,] -0.051636789
[154,] -0.073938628
[155,] -0.083216290
[156,] -0.046008590
[157,] -0.056572374
[158,] -0.060798419
[159,] -0.071083537
[160,] -0.102451184
[161,] -0.114872106
[162,] -0.101538594
[163,] -0.118386602
[164,] -0.190941156
[165,] -0.109709554
[166,] -0.147956776
[167,] -0.168523285
[168,] -0.098736528
[169,] -0.128237772
[170,] -0.067434736
[171,] -0.086093646
[172,] -0.124406774
[173,] -0.143238123
[174,] -0.229550292
[175,] -0.135030433
[176,] -0.129278799
[177,] -0.208944062
[178,] -0.080334035
[179,] -0.082172470
[180,] -0.083772297
[181,] -0.068235855
[182,] -0.148173264
[183,] -0.095642191
[184,] -0.113166777
[185,] -0.203770228
[186,] -0.207476202
[187,] -0.196631313
[188,] -0.167541249
[189,] -0.153592413
[190,] -0.143098879
[191,] -0.157768110
[192,] -0.318138035
[193,] -0.191040546
[194,] -0.177884086
[195,] -0.196631313
[196,] -0.200714529
[197,] -0.141290179
[198,] -0.042613853
[199,] -0.043078680
[200,] -0.043561965
[201,] -0.044012021
[202,] -0.044818482
[203,] -0.045177457
[204,] -0.045508378
[205,] -0.045812158
[206,] -0.046089584
[207,] -0.046341327
[208,] -0.046769919
[209,] -0.047231078
[210,] -0.082452832
[211,] -0.090219348
[212,] -0.103578840
[213,] -0.226515583
[214,] -0.049322149
[215,] -0.047954465
[216,] -0.042641544
[217,] -0.243317858
[218,] -0.174893510
[219,] -0.232695904
[220,] -0.108128549
[221,] -0.166439549
[222,] -0.221243910
[223,] -0.100361788
[224,] -0.055096281
[225,] -0.168526742
[226,] -0.184362123
[227,] -0.185329040
[228,] -0.031588479
[229,] -0.298484779
[230,] -0.319091791
[231,] -0.296390294
[232,] -0.325754030
[233,] -0.346819509
[234,] -0.030348168
[235,] -0.154481797
[236,] -0.160488275
[237,] -0.130273982
[238,] -0.159743185
[239,]  0.260412033
[240,]  0.004337491
[241,] -0.013346298
[242,]  0.095084079
[243,] -0.015366869
[244,] -0.036864442
[245,] -0.046553882
[246,] -0.156268865
[247,] -0.251441083
[248,] -0.317839243
[249,] -0.263350810
[250,] -0.068458455
[251,] -0.107866780
[252,] -0.107899214
[253,] -0.174735103
[254,] -0.291941925
[255,] -0.272649253
[256,] -0.098169906
[257,] -0.001021496
[258,] -0.065291506
[259,] -0.146041943
[260,] -0.129885665
[261,] -0.269684942
[262,] -0.265503614
[263,] -0.284858048
[264,] -0.350938919
[265,] -0.245648920
[266,] -0.275902045
[267,] -0.256179239
[268,] -0.271058283
[269,] -0.313113566
[270,] -0.284456714
[271,] -0.088766110
[272,]  0.005231905
[273,] -0.025362594
[274,] -0.090125243
[275,] -0.328195734
[276,] -0.337369514
[277,] -0.316848737
[278,] -0.224157735
[279,] -0.082427340
> 
> plotMFs(anfis3)
> 
