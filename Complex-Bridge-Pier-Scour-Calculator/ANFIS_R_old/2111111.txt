> 
> setwd("C:/Users/Computer Emergency/Desktop/scourpaper/Complex-Bridge-Pier-Scour-Calculator-1.0/ANFIS-r files")  #set working folder
> 
> rmse <- function(error)
+ {
+   sqrt(mean(error^2))
+ }
> #x1 log(bpg/bpc+.05)x2 log(bcol/bpc+.05)x3 log(h0/y+2.1)x4 log(h1/y+1.55)
> #x5 log(T/y+.05)x6 log(bpc/y)x7 log(f1/bcol+.05)z log(be/b*+.05)
> 
> MyData = read.csv("anfis-log_x_b3.txt",header=TRUE)
> MyData2 = read.csv("test_data.txt",header=TRUE)
> 
> 
> library("anfis")
> require("parallel")
> if(.Platform$OS.type == "windows"){
+ options(mc.cores=5)
+ }else{
+ options(mc.cores=5) 
+ }
> 
> membershipFunction<-list(
+ x1m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.91,sigma=.2)),
+       new(Class="NormalizedGaussianMF",parameters=c(mu=-.25,sigma=.2))),
+ 
+ x2m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-1.3,sigma=0.4))),
+ 
+ x3m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.29,sigma=0.80))),
+ 
+ x4m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.00,sigma=0.1))),
+ 
+ x5m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.48,sigma=0.50))),
+ 
+ x6m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.13,sigma=0.78))),
+ 
+ x7m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.27,sigma=0.5))))
> 
> X=MyData[,1:7]
> Y=MyData[,8,drop=FALSE]
> 
> X2=MyData2[,1:7]
> Y2=MyData2[,8,drop=FALSE]
> 
> X= as.matrix(as.data.frame(lapply(X, as.numeric)))
> typeof(X)
[1] "double"
> typeof(Y)
[1] "list"
> Y= as.matrix(as.data.frame(lapply(Y, as.numeric)))
> 
> X2= as.matrix(as.data.frame(lapply(X2, as.numeric)))
> Y2= as.matrix(as.data.frame(lapply(Y2, as.numeric)))
> 
> anfis3 <- new(Class="ANFIS",X,Y,membershipFunction)
> 
> trainOutput <- trainHybridJangOffLine(anfis3, epochs=10)
[1] "epoch:  1"
[1] "epoch:  2"
[1] "epoch:  3"
[1] "epoch:  4"
[1] "epoch:  5"
[1] "epoch:  6"
[1] "epoch:  7"
[1] "epoch:  8"
[1] "epoch:  9"
> 
> 
> summary(anfis3)
ANFIS network 
Trainning Set: 
         dim(x)= 279x7 
         dim(y)= 279x1 
Arquitecture:  7 ( 2x1x1x1x1x1x1 ) - 2 - 16 ( 16x1 ) - 1 
Last training error:  6.873134 

Call: trainHybridJangOffLine(object = anfis3, epochs = 10)

Statistics for Off-line training
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  6.868   6.869   6.870   6.870   6.871   6.873 
> coef(anfis3)
$`premises`
$`premises`$`x1m`
$`premises`$`x1m`[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.9136967  0.1884906 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))

$`premises`$`x1m`[[2]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.2503168  0.2000867 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x2m
$`premises`$x2m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-1.2732756  0.4765012 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x3m
$`premises`$x3m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
 0.29  0.80 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x4m
$`premises`$x4m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
          mu        sigma 
5.394898e-21 1.000000e-01 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x5m
$`premises`$x5m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.4789507  0.5005252 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x6m
$`premises`$x6m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.1294545  0.7800907 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x7m
$`premises`$x7m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
 0.27  0.50 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))



$consequents
                z
 [1,]  1.36682568
 [2,] -0.88490059
 [3,]  1.87442081
 [4,] -0.27832404
 [5,] -0.72337112
 [6,]  1.43653240
 [7,]  1.18288628
 [8,]  0.37958451
 [9,]  0.37207860
[10,]  0.17069020
[11,]  0.50100814
[12,] -0.45505312
[13,] -0.02965389
[14,] -0.11068362
[15,] -0.13509309
[16,] -0.08305137

> 
> predictedY <- predict(anfis3,X)
> err=rmse(MyData$z-predictedY)
> err
[1] 0.1570001
> 
> 
> predictedY2 <- predict(anfis3,X2)
> err2=rmse(MyData2$z-predictedY2)
> err2
[1] 0.9622946
> 
> graphics.off()
> dev.new()
> 
> axislimit_u= max( max(MyData$z),max(predictedY))
> axislimit_l= min( min(MyData$z),min(predictedY),0)
> xlim_=c(axislimit_l,axislimit_u)
> plot(MyData$z,predictedY,xlim=xlim_,ylim=xlim_)
> lines(c(0,axislimit_u),c(0,axislimit_u),col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*1.2),lty=2,col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*.8),lty=2,col="red")
> title(paste("train-rmse",round(err,2)))
> 
> dev.new(xpos=100)
> 
> axislimit_u= max( max(MyData2$z),max(predictedY2))
> axislimit_l= min( min(MyData2$z),min(predictedY2),0)
> xlim_=c(axislimit_l,axislimit_u)
> plot(MyData2$z,predictedY2,xlim=xlim_,ylim=xlim_)
> lines(c(0,axislimit_u),c(0,axislimit_u),col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*1.2),lty=2,col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*.8),lty=2,col="red")
> title(paste("test-rmse=",round(err2,2)))
> 
> 
> 
> 
> 
> vars=7
> 
> 
> list_coef=coef(anfis3)$consequents
> 
> no_functions=length(list_coef)/(vars+1)
> 
> for (i in 1:no_functions)
+ {
+ if(i==1){cat("\n")}
+ str=i
+ str=paste('z',i,'=',list_coef[(i-1)*(vars+1)+vars+1], sep = '')
+ for (j in 1:vars)
+ {
+ str=paste(str,'+',list_coef[(i-1)*(vars+1)+j],'*x',j, sep = '')
+ }
+ str=paste(str,"\n")
+ cat(str)
+ if(i==no_functions){cat("\n")}
+ }

z1=0.379584509783625+1.36682568010438*x1+-0.884900594031304*x2+1.87442081480963*x3+-0.278324040918453*x4+-0.723371123362681*x5+1.43653239786231*x6+1.18288627508233*x7 
z2=-0.0830513656157181+0.372078599902319*x1+0.170690200105465*x2+0.501008138150793*x3+-0.455053117446485*x4+-0.029653889453768*x5+-0.110683624279285*x6+-0.135093093705905*x7 

> 
> 
> list_coef
                z
 [1,]  1.36682568
 [2,] -0.88490059
 [3,]  1.87442081
 [4,] -0.27832404
 [5,] -0.72337112
 [6,]  1.43653240
 [7,]  1.18288628
 [8,]  0.37958451
 [9,]  0.37207860
[10,]  0.17069020
[11,]  0.50100814
[12,] -0.45505312
[13,] -0.02965389
[14,] -0.11068362
[15,] -0.13509309
[16,] -0.08305137
> 
> 
> for (i in 1:vars){
+ if(i==1){cat("\n")}
+ #if(length(membershipFunction[[i]])>1){
+ for (j in 1:length(membershipFunction[[i]])){
+ str=""
+ mu__=getPremises(anfis3)[[i]][[j]][1][[1]]
+ stdev__=getPremises(anfis3)[[i]][[j]][2][[1]]
+ str=paste(str,"w",i,'_',j,"=exp(-0.5*(x",i,"-",mu__,") ^ 2/",stdev__," ^ 2)",sep="")
+ cat(str,"\n")
+ }
+ cat("\n")
+ #}
+ }

w1_1=exp(-0.5*(x1--0.913696712160069) ^ 2/0.188490562205102 ^ 2) 
w1_2=exp(-0.5*(x1--0.250316849760302) ^ 2/0.200086705064458 ^ 2) 

w2_1=exp(-0.5*(x2--1.27327560696962) ^ 2/0.476501231898447 ^ 2) 

w3_1=exp(-0.5*(x3-0.29) ^ 2/0.8 ^ 2) 

w4_1=exp(-0.5*(x4-5.3948981076014e-21) ^ 2/0.1 ^ 2) 

w5_1=exp(-0.5*(x5--0.478950724191956) ^ 2/0.500525202353215 ^ 2) 

w6_1=exp(-0.5*(x6--0.129454544236583) ^ 2/0.780090735797311 ^ 2) 

w7_1=exp(-0.5*(x7-0.270000000000001) ^ 2/0.499999999999999 ^ 2) 

> 
> for (i in 1:no_functions){
+ str=paste('ww',i,'=',sep='')
+ for (j in 1:vars){
+ str=paste(str,'w',j,'_',getRules(anfis3)[i,j],sep='')
+ if(j<vars){str=paste(str,'*',sep='')}
+ }
+ cat(str,"\n")
+ }
ww1=w1_1*w2_1*w3_1*w4_1*w5_1*w6_1*w7_1 
ww2=w1_2*w2_1*w3_1*w4_1*w5_1*w6_1*w7_1 
> 
> str='\nwwN='
> str2='\nz='
> for (i in 1:no_functions){
+ str=paste(str,'ww',i,sep='')
+ str2=paste(str2,'z',i,'*ww',i,sep='')
+ if(i<no_functions){str=paste(str,'+',sep='')}
+ if(i<no_functions){str2=paste(str2,'+',sep='')}
+ }
> str=paste(str,'\n\n')
> str2=paste(str2,'\n\n')
> 
> cat(str)

wwN=ww1+ww2 

> cat(str2)

z=z1*ww1+z2*ww2 

> 
> fitted.values(anfis3)
                   z
  [1,] -0.1738417056
  [2,] -0.1556030866
  [3,] -0.1590240574
  [4,] -0.1673494144
  [5,] -0.1744659433
  [6,] -0.1406174237
  [7,] -0.1122439730
  [8,] -0.1490412611
  [9,] -0.1333481142
 [10,] -0.1574501921
 [11,] -0.1586750584
 [12,] -0.1743176608
 [13,] -0.1345726868
 [14,] -0.1461240362
 [15,] -0.1945851748
 [16,] -0.1894859390
 [17,] -0.2068454450
 [18,] -0.2235401929
 [19,] -0.1542309219
 [20,] -0.1436817261
 [21,] -0.1663373077
 [22,] -0.1825043770
 [23,] -0.0958323589
 [24,] -0.1264572328
 [25,] -0.1437922226
 [26,] -0.1522700620
 [27,] -0.1607424061
 [28,] -0.1692695294
 [29,] -0.1778995447
 [30,] -0.1866734000
 [31,] -0.1911258852
 [32,] -0.0359109044
 [33,] -0.1720973471
 [34,] -0.1259812256
 [35,] -0.1765389772
 [36,] -0.1765389772
 [37,] -0.1761509054
 [38,] -0.1772065362
 [39,] -0.1708189398
 [40,] -0.1715615832
 [41,] -0.1709464562
 [42,] -0.1564957259
 [43,] -0.1545873389
 [44,] -0.1446409245
 [45,] -0.1463764254
 [46,] -0.1461023724
 [47,] -0.1445833056
 [48,] -0.2058978553
 [49,] -0.2052655124
 [50,] -0.2029890636
 [51,] -0.1980878986
 [52,] -0.1986223096
 [53,] -0.1972807156
 [54,] -0.1981435767
 [55,] -0.1997436219
 [56,] -0.1999437222
 [57,] -0.1996463644
 [58,] -0.1989516481
 [59,] -0.2064172253
 [60,] -0.2066192924
 [61,] -0.2030886483
 [62,] -0.2034702631
 [63,] -0.2017377992
 [64,] -0.1992661440
 [65,] -0.1978131298
 [66,] -0.2134877021
 [67,] -0.2227669482
 [68,] -0.0959286904
 [69,] -0.0983535586
 [70,] -0.1008073201
 [71,] -0.1017602419
 [72,] -0.1000880262
 [73,] -0.0088284362
 [74,] -0.0132069909
 [75,] -0.0144860648
 [76,] -0.1505035929
 [77,] -0.1453449389
 [78,] -0.0633220748
 [79,] -0.0040504831
 [80,]  0.0504163697
 [81,] -0.1926991721
 [82,] -0.1924386662
 [83,] -0.1916820699
 [84,] -0.1080575869
 [85,] -0.1732756657
 [86,] -0.1546543497
 [87,] -0.1355887765
 [88,] -0.1362892919
 [89,] -0.0376738736
 [90,] -0.0383416752
 [91,] -0.2060022885
 [92,] -0.1694155583
 [93,] -0.1749453713
 [94,] -0.1793464420
 [95,] -0.1300789610
 [96,] -0.1265807298
 [97,] -0.1145697572
 [98,] -0.1137063381
 [99,] -0.1138539202
[100,] -0.1147554630
[101,] -0.1261285191
[102,] -0.1343710071
[103,] -0.0175773448
[104,] -0.0175101141
[105,] -0.0028783550
[106,]  0.0036761955
[107,] -0.1945565615
[108,] -0.1954358328
[109,]  0.0250650049
[110,] -0.1273472192
[111,] -0.1352933507
[112,] -0.1273472192
[113,] -0.1352933507
[114,] -0.1172460708
[115,] -0.1171037468
[116,] -0.1843321163
[117,] -0.1781748128
[118,] -0.1806107613
[119,] -0.1810453661
[120,] -0.1809594023
[121,] -0.1813912717
[122,] -0.1797038694
[123,] -0.1800368116
[124,] -0.1764709814
[125,] -0.1780505422
[126,] -0.1613982048
[127,] -0.1608769099
[128,] -0.1596079385
[129,] -0.1572953968
[130,] -0.1585050601
[131,] -0.2138482293
[132,] -0.2092202087
[133,] -0.2109549732
[134,] -0.2119928540
[135,] -0.2119928540
[136,] -0.1964495387
[137,] -0.1969217635
[138,] -0.2045646729
[139,] -0.1964328577
[140,] -0.1967459162
[141,] -0.2339717067
[142,] -0.2425709106
[143,] -0.0055465125
[144,] -0.0065083078
[145,] -0.1793358528
[146,] -0.1613782944
[147,] -0.1148072989
[148,] -0.1934779493
[149,] -0.1934664647
[150,] -0.1934045976
[151,] -0.1932334881
[152,] -0.1933096451
[153,] -0.0831706078
[154,] -0.0890408065
[155,] -0.0902168519
[156,] -0.0619898391
[157,] -0.0648115032
[158,] -0.0653387195
[159,] -0.1109818590
[160,] -0.1138035231
[161,] -0.1143307394
[162,] -0.1787593905
[163,] -0.1816881086
[164,] -0.1858056346
[165,] -0.1590261441
[166,] -0.1604002859
[167,] -0.1609275022
[168,] -0.1364716365
[169,] -0.1365239872
[170,] -0.0385129658
[171,] -0.0385399554
[172,] -0.2090153525
[173,] -0.2103663375
[174,] -0.2123172548
[175,] -0.2303641976
[176,] -0.1809683938
[177,] -0.1853527707
[178,] -0.0722929307
[179,] -0.0944794295
[180,] -0.1284236278
[181,] -0.0399746372
[182,] -0.1580588549
[183,] -0.1412888985
[184,] -0.1285133796
[185,] -0.2311457652
[186,] -0.1992075541
[187,] -0.1827113531
[188,] -0.1454279517
[189,] -0.1318264787
[190,] -0.1237438969
[191,] -0.1355712423
[192,] -0.4180024602
[193,] -0.1747161628
[194,] -0.1574067089
[195,] -0.1827113531
[196,] -0.1887742798
[197,] -0.1225524804
[198,]  0.0236669086
[199,]  0.0195115170
[200,]  0.0148349669
[201,]  0.0100916675
[202,]  0.0003871739
[203,] -0.0045831274
[204,] -0.0096384522
[205,] -0.0147837724
[206,] -0.0200242828
[207,] -0.0253654333
[208,] -0.0363729440
[209,] -0.0537940620
[210,] -0.1385079314
[211,] -0.1458013139
[212,] -0.1527872722
[213,] -0.1663354365
[214,] -0.0172444545
[215,] -0.0171533242
[216,] -0.0168490924
[217,] -0.0740337732
[218,] -0.1957616378
[219,] -0.1959781348
[220,]  0.0262484433
[221,] -0.1166582712
[222,] -0.1798277702
[223,] -0.1299863695
[224,] -0.1018944907
[225,] -0.1648644761
[226,] -0.1717338897
[227,] -0.1704033902
[228,] -0.0663819690
[229,] -0.1880045601
[230,] -0.2066523794
[231,] -0.2454350785
[232,] -0.2479963773
[233,] -0.2648375376
[234,] -0.1114058384
[235,] -0.1019305329
[236,] -0.1019422005
[237,] -0.0997875855
[238,] -0.1017224999
[239,]  0.0747620960
[240,] -0.0019942621
[241,] -0.0043795441
[242,]  0.0257138619
[243,] -0.0027091857
[244,] -0.0066475984
[245,] -0.0089220115
[246,] -0.0723014784
[247,] -0.1437485437
[248,] -0.2007308709
[249,] -0.1907773103
[250,] -0.0387120288
[251,] -0.1604544442
[252,] -0.1476963051
[253,] -0.1338781475
[254,] -0.1848345454
[255,] -0.1934413394
[256,] -0.1059062097
[257,] -0.2531933175
[258,] -0.0679584730
[259,] -0.1169504929
[260,] -0.1201995419
[261,] -0.1925816252
[262,] -0.2014949924
[263,] -0.2075201812
[264,] -0.2532473375
[265,] -0.1868180010
[266,] -0.1898873160
[267,] -0.1940439601
[268,] -0.2918773452
[269,] -0.2806607159
[270,] -0.2504935638
[271,] -0.1838634684
[272,] -0.1083987054
[273,] -0.0079134010
[274,]  0.0060373800
[275,] -0.1437268334
[276,] -0.1041597294
[277,] -0.0902701764
[278,] -0.1492614020
[279,]  0.0673967726
> 
> plotMFs(anfis3)
> 
