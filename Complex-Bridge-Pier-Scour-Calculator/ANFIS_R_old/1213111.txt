> 
> setwd("C:/Users/Computer Emergency/Desktop/scourpaper/Complex-Bridge-Pier-Scour-Calculator-1.0/ANFIS-r files")  #set working folder
> 
> rmse <- function(error)
+ {
+   sqrt(mean(error^2))
+ }
> #x1 log(bpg/bpc+.05)x2 log(bcol/bpc+.05)x3 log(h0/y+2.1)x4 log(h1/y+1.55)
> #x5 log(T/y+.05)x6 log(bpc/y)x7 log(f1/bcol+.05)z log(be/b*+.05)
> 
> MyData = read.csv("anfis-log_x_b3.txt",header=TRUE)
> MyData2 = read.csv("test_data.txt",header=TRUE)
> 
> 
> library("anfis")
> require("parallel")
> if(.Platform$OS.type == "windows"){
+ options(mc.cores=5)
+ }else{
+ options(mc.cores=5) 
+ }
> 
> membershipFunction<-list(
+ x1m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.91,sigma=.2))),
+ 
+ x2m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-1.3,sigma=0.4)),
+       new(Class="NormalizedGaussianMF",parameters=c(mu=.02,sigma=0.4))),
+ 
+ x3m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.29,sigma=0.80))),
+ 
+ x4m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.00,sigma=0.1)),
+       new(Class="NormalizedGaussianMF",parameters=c(mu=.24,sigma=0.1)),
+       new(Class="NormalizedGaussianMF",parameters=c(mu=.41,sigma=0.1))),
+ 
+ x5m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.48,sigma=0.50))),
+ 
+ x6m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=-.13,sigma=0.78))),
+ 
+ x7m=c(new(Class="NormalizedGaussianMF",parameters=c(mu=.27,sigma=0.5))))
> 
> X=MyData[,1:7]
> Y=MyData[,8,drop=FALSE]
> 
> X2=MyData2[,1:7]
> Y2=MyData2[,8,drop=FALSE]
> 
> X= as.matrix(as.data.frame(lapply(X, as.numeric)))
> typeof(X)
[1] "double"
> typeof(Y)
[1] "list"
> Y= as.matrix(as.data.frame(lapply(Y, as.numeric)))
> 
> X2= as.matrix(as.data.frame(lapply(X2, as.numeric)))
> Y2= as.matrix(as.data.frame(lapply(Y2, as.numeric)))
> 
> anfis3 <- new(Class="ANFIS",X,Y,membershipFunction)
> 
> trainOutput <- trainHybridJangOffLine(anfis3, epochs=10)
[1] "epoch:  1"
[1] "epoch:  2"
[1] "epoch:  3"
[1] "epoch:  4"
[1] "epoch:  5"
[1] "epoch:  6"
[1] "epoch:  7"
[1] "epoch:  8"
[1] "epoch:  9"
> 
> 
> summary(anfis3)
ANFIS network 
Trainning Set: 
         dim(x)= 279x7 
         dim(y)= 279x1 
Arquitecture:  7 ( 1x2x1x3x1x1x1 ) - 6 - 48 ( 48x1 ) - 1 
Last training error:  4.969793 

Call: trainHybridJangOffLine(object = anfis3, epochs = 10)

Statistics for Off-line training
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  4.970   4.980   4.988   4.985   4.992   4.995 
> coef(anfis3)
$`premises`
$`premises`$`x1m`
$`premises`$`x1m`[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.8904185  0.2523146 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x2m
$`premises`$x2m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-1.2906168  0.4284761 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))

$`premises`$x2m[[2]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
0.02130158 0.39978419 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x3m
$`premises`$x3m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
 0.29  0.80 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x4m
$`premises`$x4m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
           mu         sigma 
-1.873831e-20  1.000000e-01 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))

$`premises`$x4m[[2]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
 0.24  0.10 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))

$`premises`$x4m[[3]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
 0.41  0.10 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x5m
$`premises`$x5m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.4767851  0.5016016 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x6m
$`premises`$x6m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
        mu      sigma 
-0.1306734  0.7798875 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))


$`premises`$x7m
$`premises`$x7m[[1]]
MembershipFunction:  Normalized Gaussian Membership Function 
Number of parameters: 2 
   mu sigma 
 0.27  0.50 
Expression: expression(exp(-1/2 * ((x - mu)/sigma)^2))



$consequents
                z
 [1,] -1.63249731
 [2,] -0.73533791
 [3,] -1.53755369
 [4,] -1.61420763
 [5,]  0.63557251
 [6,]  1.34099135
 [7,]  2.60156713
 [8,]  2.65403757
 [9,]  0.25404567
[10,]  1.83479534
[11,]  0.26763504
[12,] -0.25842954
[13,]  0.13061577
[14,] -1.00730798
[15,]  0.01663044
[16,]  0.21834090
[17,]  1.24067213
[18,]  8.02874577
[19,]  0.78365137
[20,]  3.76171071
[21,] -1.68424816
[22,]  2.69856625
[23,] -0.28159700
[24,]  3.11676147
[25,] -0.42115679
[26,] -0.16865813
[27,]  0.14151215
[28,]  2.76104878
[29,]  0.10564037
[30,] -0.38122612
[31,] -0.59988396
[32,] -1.14017309
[33,] -0.11686608
[34,] -0.71355804
[35,] -1.14738737
[36,] -1.12691922
[37,]  0.22492247
[38,] -0.22290274
[39,] -0.30134330
[40,]  0.61197422
[41,]  0.74347119
[42,]  0.23719046
[43,] -0.87631951
[44,]  3.49827319
[45,]  0.01910377
[46,] -0.04238431
[47,]  0.43694345
[48,] -0.89752049

> 
> predictedY <- predict(anfis3,X)
> err=rmse(MyData$z-predictedY)
> err
[1] 0.1341511
> 
> 
> predictedY2 <- predict(anfis3,X2)
> err2=rmse(MyData2$z-predictedY2)
> err2
[1] 1.332096
> 
> graphics.off()
> dev.new()
> 
> axislimit_u= max( max(MyData$z),max(predictedY))
> axislimit_l= min( min(MyData$z),min(predictedY),0)
> xlim_=c(axislimit_l,axislimit_u)
> plot(MyData$z,predictedY,xlim=xlim_,ylim=xlim_)
> lines(c(0,axislimit_u),c(0,axislimit_u),col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*1.2),lty=2,col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*.8),lty=2,col="red")
> title(paste("train-rmse",round(err,2)))
> 
> dev.new(xpos=100)
> 
> axislimit_u= max( max(MyData2$z),max(predictedY2))
> axislimit_l= min( min(MyData2$z),min(predictedY2),0)
> xlim_=c(axislimit_l,axislimit_u)
> plot(MyData2$z,predictedY2,xlim=xlim_,ylim=xlim_)
> lines(c(0,axislimit_u),c(0,axislimit_u),col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*1.2),lty=2,col="red")
> lines(c(0,axislimit_u),c(0,axislimit_u*.8),lty=2,col="red")
> title(paste("test-rmse=",round(err2,2)))
> 
> 
> 
> 
> 
> vars=7
> 
> 
> list_coef=coef(anfis3)$consequents
> 
> no_functions=length(list_coef)/(vars+1)
> 
> for (i in 1:no_functions)
+ {
+ if(i==1){cat("\n")}
+ str=i
+ str=paste('z',i,'=',list_coef[(i-1)*(vars+1)+vars+1], sep = '')
+ for (j in 1:vars)
+ {
+ str=paste(str,'+',list_coef[(i-1)*(vars+1)+j],'*x',j, sep = '')
+ }
+ str=paste(str,"\n")
+ cat(str)
+ if(i==no_functions){cat("\n")}
+ }

z1=2.6540375740637+-1.63249730996144*x1+-0.735337912161085*x2+-1.53755368655835*x3+-1.61420762670739*x4+0.635572512303894*x5+1.34099134949131*x6+2.60156713128415*x7 
z2=0.218340898469788+0.254045665513305*x1+1.83479534355791*x2+0.26763504014565*x3+-0.258429540447066*x4+0.130615766978907*x5+-1.00730798194039*x6+0.0166304402342383*x7 
z3=3.11676147179856+1.24067212690867*x1+8.02874576984851*x2+0.783651371229378*x3+3.76171071155911*x4+-1.6842481608151*x5+2.69856625020775*x6+-0.281596997600987*x7 
z4=-1.14017309311785+-0.421156794461137*x1+-0.168658130035122*x2+0.141512154326918*x3+2.7610487797541*x4+0.105640366097843*x5+-0.381226124586254*x6+-0.599883958258235*x7 
z5=0.611974221684617+-0.116866084787969*x1+-0.713558043960286*x2+-1.14738736529745*x3+-1.1269192195363*x4+0.224922472690444*x5+-0.222902739010624*x6+-0.301343301337809*x7 
z6=-0.897520493017017+0.743471186252465*x1+0.237190463118287*x2+-0.876319512283627*x3+3.49827319444331*x4+0.0191037708205628*x5+-0.0423843133326486*x6+0.436943451259237*x7 

> 
> 
> list_coef
                z
 [1,] -1.63249731
 [2,] -0.73533791
 [3,] -1.53755369
 [4,] -1.61420763
 [5,]  0.63557251
 [6,]  1.34099135
 [7,]  2.60156713
 [8,]  2.65403757
 [9,]  0.25404567
[10,]  1.83479534
[11,]  0.26763504
[12,] -0.25842954
[13,]  0.13061577
[14,] -1.00730798
[15,]  0.01663044
[16,]  0.21834090
[17,]  1.24067213
[18,]  8.02874577
[19,]  0.78365137
[20,]  3.76171071
[21,] -1.68424816
[22,]  2.69856625
[23,] -0.28159700
[24,]  3.11676147
[25,] -0.42115679
[26,] -0.16865813
[27,]  0.14151215
[28,]  2.76104878
[29,]  0.10564037
[30,] -0.38122612
[31,] -0.59988396
[32,] -1.14017309
[33,] -0.11686608
[34,] -0.71355804
[35,] -1.14738737
[36,] -1.12691922
[37,]  0.22492247
[38,] -0.22290274
[39,] -0.30134330
[40,]  0.61197422
[41,]  0.74347119
[42,]  0.23719046
[43,] -0.87631951
[44,]  3.49827319
[45,]  0.01910377
[46,] -0.04238431
[47,]  0.43694345
[48,] -0.89752049
> 
> 
> for (i in 1:vars){
+ if(i==1){cat("\n")}
+ #if(length(membershipFunction[[i]])>1){
+ for (j in 1:length(membershipFunction[[i]])){
+ str=""
+ mu__=getPremises(anfis3)[[i]][[j]][1][[1]]
+ stdev__=getPremises(anfis3)[[i]][[j]][2][[1]]
+ str=paste(str,"w",i,'_',j,"=exp(-0.5*(x",i,"-",mu__,") ^ 2/",stdev__," ^ 2)",sep="")
+ cat(str,"\n")
+ }
+ cat("\n")
+ #}
+ }

w1_1=exp(-0.5*(x1--0.890418504830826) ^ 2/0.252314550867742 ^ 2) 

w2_1=exp(-0.5*(x2--1.29061683179281) ^ 2/0.428476112915251 ^ 2) 
w2_2=exp(-0.5*(x2-0.0213015819743418) ^ 2/0.399784187682697 ^ 2) 

w3_1=exp(-0.5*(x3-0.29) ^ 2/0.8 ^ 2) 

w4_1=exp(-0.5*(x4--1.87383089456105e-20) ^ 2/0.1 ^ 2) 
w4_2=exp(-0.5*(x4-0.24) ^ 2/0.1 ^ 2) 
w4_3=exp(-0.5*(x4-0.41) ^ 2/0.1 ^ 2) 

w5_1=exp(-0.5*(x5--0.476785124686298) ^ 2/0.501601583760539 ^ 2) 

w6_1=exp(-0.5*(x6--0.130673366683757) ^ 2/0.779887520793117 ^ 2) 

w7_1=exp(-0.5*(x7-0.269999999999999) ^ 2/0.500000000000003 ^ 2) 

> 
> for (i in 1:no_functions){
+ str=paste('ww',i,'=',sep='')
+ for (j in 1:vars){
+ str=paste(str,'w',j,'_',getRules(anfis3)[i,j],sep='')
+ if(j<vars){str=paste(str,'*',sep='')}
+ }
+ cat(str,"\n")
+ }
ww1=w1_1*w2_1*w3_1*w4_1*w5_1*w6_1*w7_1 
ww2=w1_1*w2_2*w3_1*w4_1*w5_1*w6_1*w7_1 
ww3=w1_1*w2_1*w3_1*w4_2*w5_1*w6_1*w7_1 
ww4=w1_1*w2_2*w3_1*w4_2*w5_1*w6_1*w7_1 
ww5=w1_1*w2_1*w3_1*w4_3*w5_1*w6_1*w7_1 
ww6=w1_1*w2_2*w3_1*w4_3*w5_1*w6_1*w7_1 
> 
> str='\nwwN='
> str2='\nz='
> for (i in 1:no_functions){
+ str=paste(str,'ww',i,sep='')
+ str2=paste(str2,'z',i,'*ww',i,sep='')
+ if(i<no_functions){str=paste(str,'+',sep='')}
+ if(i<no_functions){str2=paste(str2,'+',sep='')}
+ }
> str=paste(str,'\n\n')
> str2=paste(str2,'\n\n')
> 
> cat(str)

wwN=ww1+ww2+ww3+ww4+ww5+ww6 

> cat(str2)

z=z1*ww1+z2*ww2+z3*ww3+z4*ww4+z5*ww5+z6*ww6 

> 
> fitted.values(anfis3)
                   z
  [1,] -0.1745834051
  [2,] -0.1613651615
  [3,] -0.1713612616
  [4,] -0.1810887394
  [5,] -0.1834004444
  [6,] -0.1672389256
  [7,] -0.1380310858
  [8,] -0.1565433771
  [9,] -0.1438334053
 [10,] -0.1666107621
 [11,] -0.1637185349
 [12,] -0.1646529448
 [13,] -0.1396078004
 [14,] -0.1503865462
 [15,] -0.0708825067
 [16,] -0.1049002458
 [17,] -0.1033969689
 [18,] -0.0960933064
 [19,] -0.1498618475
 [20,] -0.1759746678
 [21,] -0.1608909516
 [22,] -0.1224558327
 [23,] -0.1702344293
 [24,] -0.1897674545
 [25,] -0.1865264070
 [26,] -0.1826254880
 [27,] -0.1775721592
 [28,] -0.1715196451
 [29,] -0.1645678937
 [30,] -0.1567813542
 [31,] -0.1525881147
 [32,] -0.0733844699
 [33,] -0.2064756053
 [34,] -0.1016190530
 [35,] -0.0926039342
 [36,] -0.0926039342
 [37,] -0.0759857174
 [38,] -0.0514033952
 [39,] -0.0757025184
 [40,] -0.0722611560
 [41,] -0.0718190556
 [42,] -0.0601581836
 [43,] -0.0651401407
 [44,] -0.1423519208
 [45,] -0.1289309074
 [46,] -0.1375985344
 [47,] -0.1452372506
 [48,] -0.2777320900
 [49,] -0.2354462934
 [50,] -0.1301778521
 [51,] -0.0468018496
 [52,] -0.0731492407
 [53,] -0.1714855112
 [54,] -0.1552038456
 [55,] -0.2961019768
 [56,] -0.1207874558
 [57,] -0.0880367679
 [58,] -0.1508321449
 [59,] -0.1345930088
 [60,] -0.2244235784
 [61,] -0.1470553201
 [62,] -0.2251711616
 [63,] -0.1034011641
 [64,] -0.1584666702
 [65,] -0.2628147670
 [66,] -0.0746221072
 [67,] -0.0574488069
 [68,] -0.1170652478
 [69,] -0.0329152705
 [70,]  0.0549759208
 [71,] -0.0101157952
 [72,]  0.0420618391
 [73,] -0.0574947560
 [74,] -0.0646500169
 [75,] -0.1355515556
 [76,] -0.0955547386
 [77,] -0.0899262892
 [78,] -0.0593528768
 [79,] -0.1057510923
 [80,] -0.1833939747
 [81,] -0.0940784060
 [82,] -0.0641105952
 [83,]  0.0075813724
 [84,] -0.1287048173
 [85,] -0.0822757705
 [86,] -0.0992857161
 [87,] -0.1163880050
 [88,] -0.0842828536
 [89,] -0.1083455328
 [90,] -0.0156728826
 [91,] -0.0514586006
 [92,] -0.1010038307
 [93,] -0.0577080250
 [94,] -0.0350750904
 [95,] -0.1366627992
 [96,] -0.1261147625
 [97,] -0.0592820057
 [98,] -0.0637512697
 [99,] -0.1103361133
[100,] -0.1631492128
[101,] -0.0843581362
[102,] -0.0366646743
[103,]  0.0254498343
[104,]  0.1270670693
[105,] -0.0960009273
[106,] -0.1027276927
[107,] -0.0876946603
[108,] -0.1547176356
[109,]  0.0325016663
[110,] -0.0879274499
[111,] -0.0380061805
[112,] -0.0879274499
[113,] -0.0380061805
[114,] -0.1591554830
[115,] -0.1612353641
[116,] -0.1766888849
[117,] -0.1404140036
[118,] -0.1770384841
[119,] -0.1632551213
[120,] -0.1605750445
[121,] -0.1598186458
[122,] -0.1486520497
[123,] -0.1450967653
[124,] -0.1250513320
[125,] -0.1103059310
[126,] -0.0655146719
[127,] -0.0671623432
[128,] -0.0598935083
[129,] -0.0563578951
[130,] -0.0571421986
[131,] -0.4435071753
[132,] -0.4982484132
[133,] -0.4624942328
[134,] -0.3855042280
[135,] -0.3855042280
[136,] -0.3580422867
[137,] -0.3593649832
[138,] -0.4120892192
[139,] -0.3673467478
[140,] -0.3513761580
[141,] -0.0828677967
[142,] -0.1760041878
[143,] -0.0404698049
[144,] -0.0266842218
[145,] -0.1864636562
[146,] -0.1097547790
[147,] -0.0683691331
[148,] -0.3049357402
[149,] -0.2840070012
[150,] -0.2449935379
[151,] -0.1871071644
[152,] -0.2089407451
[153,] -0.0007908426
[154,]  0.0249275644
[155,]  0.0141501870
[156,] -0.0144328219
[157,]  0.0172483315
[158,]  0.0073703791
[159,] -0.0588101491
[160,] -0.0768042294
[161,] -0.0928161492
[162,] -0.0663063257
[163,] -0.0862289721
[164,] -0.1537163454
[165,] -0.0908370184
[166,] -0.1326900202
[167,] -0.1545087946
[168,] -0.0961974012
[169,] -0.1355230813
[170,] -0.0005020184
[171,] -0.0216421005
[172,] -0.0628417615
[173,] -0.0956016147
[174,] -0.1790888765
[175,] -0.0616154420
[176,] -0.0434481771
[177,] -0.1274664096
[178,]  0.0379691494
[179,]  0.0683307606
[180,]  0.1149886722
[181,] -0.0045435120
[182,] -0.1493318242
[183,] -0.0863753526
[184,] -0.0827766662
[185,] -0.2220522510
[186,] -0.2255407664
[187,] -0.2145056835
[188,] -0.1799581562
[189,] -0.1603246712
[190,] -0.1439911186
[191,] -0.1664387622
[192,] -0.3027443685
[193,] -0.2084567502
[194,] -0.1931526293
[195,] -0.2145056835
[196,] -0.2187651513
[197,] -0.1410277466
[198,] -0.1603803176
[199,] -0.1547511693
[200,] -0.1484094355
[201,] -0.1419705446
[202,] -0.1287780595
[203,] -0.1220123845
[204,] -0.1151253156
[205,] -0.1081101762
[206,] -0.1009599635
[207,] -0.0936673048
[208,] -0.0786230256
[209,] -0.0547771525
[210,] -0.0232284565
[211,] -0.0220745565
[212,] -0.0468421248
[213,] -0.4097703393
[214,]  0.0925398057
[215,]  0.0767150986
[216,]  0.0176024999
[217,] -0.1694046322
[218,] -0.2066691287
[219,] -0.2529420081
[220,]  0.0473770043
[221,]  0.0220281403
[222,] -0.1910590765
[223,] -0.1232347590
[224,] -0.1258143420
[225,] -0.1345519799
[226,] -0.1860154717
[227,] -0.1715287343
[228,] -0.0794251935
[229,] -0.2577974742
[230,] -0.3127531007
[231,] -0.2091225571
[232,] -0.2324798938
[233,] -0.1167979747
[234,]  0.0293776572
[235,] -0.0779739122
[236,] -0.1178251705
[237,] -0.2576334291
[238,] -0.2106246532
[239,]  0.0953665918
[240,] -0.0925582909
[241,] -0.0627991392
[242,]  0.1274714321
[243,] -0.0334006206
[244,] -0.0738755326
[245,] -0.0470907461
[246,] -0.0601196134
[247,] -0.1284565195
[248,] -0.2710755139
[249,] -0.2550111836
[250,] -0.0905545944
[251,] -0.0933256442
[252,] -0.0870341133
[253,] -0.0210327408
[254,] -0.1896947722
[255,] -0.3262555990
[256,] -0.0303663995
[257,]  0.0080349904
[258,] -0.0608010749
[259,] -0.1767201323
[260,] -0.1436784083
[261,] -0.2628338759
[262,] -0.2288319665
[263,] -0.1767558080
[264,] -0.2442834331
[265,] -0.1689446071
[266,] -0.2296323290
[267,] -0.1415054969
[268,] -0.4691065015
[269,] -0.4862410874
[270,] -0.3616181756
[271,] -0.1083370319
[272,] -0.0941707723
[273,] -0.0039493144
[274,]  0.1032322968
[275,] -0.0196132713
[276,] -0.2170642149
[277,] -0.2197108420
[278,] -0.0893289628
[279,]  0.0670882553
> 
> plotMFs(anfis3)
> 
